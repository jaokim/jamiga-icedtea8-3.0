# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Dependencies
VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@ENABLE_DOCS_TRUE@am__append_1 = docs

# Conditional patches
@BUILD_CACAO_TRUE@am__append_2 = \
@BUILD_CACAO_TRUE@	patches/cacao/launcher.patch

@BUILD_CACAO_FALSE@@USING_CACAO_TRUE@am__append_3 = 
@ENABLE_CACAO_TRUE@am__append_4 = \
@ENABLE_CACAO_TRUE@	patches/cacao/ignore-tests.patch

@BUILD_JAMVM_TRUE@am__append_5 = \
@BUILD_JAMVM_TRUE@	patches/jamvm/find_class_from_caller.patch \
@BUILD_JAMVM_TRUE@	patches/jamvm/pr2034-tempdir.patch \
@BUILD_JAMVM_TRUE@	patches/jamvm/noexecstack.patch \
@BUILD_JAMVM_TRUE@	patches/jamvm/pr2775-cache_api.patch

@ENABLE_SUNEC_FALSE@am__append_6 = \
@ENABLE_SUNEC_FALSE@	patches/disable-intree-ec.patch

@USE_NON_NSS_CURVES_FALSE@am__append_7 = patches/rh1022017.patch
@ENABLE_NSS_TRUE@@ENABLE_SUNEC_TRUE@am__append_8 = patches/nss-config-with-sunec.patch
@ENABLE_NSS_TRUE@@ENABLE_SUNEC_FALSE@am__append_9 = patches/nss-config.patch
@ENABLE_NSS_FALSE@@ENABLE_SUNEC_TRUE@am__append_10 = patches/nss-not-enabled-config-with-sunec.patch
@ENABLE_NSS_FALSE@@ENABLE_SUNEC_FALSE@am__append_11 = patches/nss-not-enabled-config.patch
@ENABLE_CACAO_TRUE@am__append_12 = \
@ENABLE_CACAO_TRUE@	--with-import-hotspot="$(CACAO_IMPORT_PATH)"

@ENABLE_JAMVM_TRUE@am__append_13 = \
@ENABLE_JAMVM_TRUE@	--with-import-hotspot="$(JAMVM_IMPORT_PATH)"

@USE_SYSTEM_ZLIB_TRUE@am__append_14 = \
@USE_SYSTEM_ZLIB_TRUE@	--with-zlib=system

@USE_SYSTEM_ZLIB_FALSE@am__append_15 = \
@USE_SYSTEM_ZLIB_FALSE@	--with-zlib=bundled

@USE_SYSTEM_LCMS_TRUE@am__append_16 = \
@USE_SYSTEM_LCMS_TRUE@	--with-lcms=system

@USE_SYSTEM_LCMS_FALSE@am__append_17 = \
@USE_SYSTEM_LCMS_FALSE@	--with-lcms=bundled

@USE_SYSTEM_JPEG_TRUE@am__append_18 = \
@USE_SYSTEM_JPEG_TRUE@	--with-libjpeg=system

@USE_SYSTEM_JPEG_FALSE@am__append_19 = \
@USE_SYSTEM_JPEG_FALSE@	--with-libjpeg=bundled

@USE_SYSTEM_PNG_TRUE@am__append_20 = \
@USE_SYSTEM_PNG_TRUE@	--with-libpng=system

@USE_SYSTEM_PNG_FALSE@am__append_21 = \
@USE_SYSTEM_PNG_FALSE@	--with-libpng=bundled

@USE_SYSTEM_GIF_TRUE@am__append_22 = \
@USE_SYSTEM_GIF_TRUE@	--with-giflib=system

@USE_SYSTEM_GIF_FALSE@am__append_23 = \
@USE_SYSTEM_GIF_FALSE@	--with-giflib=bundled

@ENABLE_SUNEC_TRUE@am__append_24 = \
@ENABLE_SUNEC_TRUE@	--enable-system-nss

@ENABLE_SUNEC_FALSE@am__append_25 = \
@ENABLE_SUNEC_FALSE@	--disable-system-nss

@ZERO_BUILD_TRUE@am__append_26 = \
@ZERO_BUILD_TRUE@	--with-jvm-variants=zero

@SHARK_BUILD_TRUE@am__append_27 = \
@SHARK_BUILD_TRUE@	--with-jvm-variants=zeroshark

@ENABLE_WERROR_TRUE@am__append_28 = \
@ENABLE_WERROR_TRUE@	--enable-warnings-as-errors

@ENABLE_WERROR_FALSE@am__append_29 = \
@ENABLE_WERROR_FALSE@	--disable-warnings-as-errors

@USE_ALT_CACERTS_FILE_TRUE@am__append_30 = \
@USE_ALT_CACERTS_FILE_TRUE@	--with-cacerts-file=$(CACERTS_FILE)

@DISABLE_OPTIMIZATIONS_TRUE@am__append_31 = \
@DISABLE_OPTIMIZATIONS_TRUE@	NO_OPTIMIZATIONS="true" \
@DISABLE_OPTIMIZATIONS_TRUE@	CC_NO_OPT="-O0 -g"

@USE_ALT_JAR_TRUE@am__append_32 = \
@USE_ALT_JAR_TRUE@	ALT_JAR_CMD="$(ALT_JAR_CMD)"

@HAS_HOTSPOT_REVISION_TRUE@am__append_33 = \
@HAS_HOTSPOT_REVISION_TRUE@	HOTSPOT_BUILD_VERSION="$(HOTSPOT_REVISION)"

@USE_SYSTEM_ZLIB_TRUE@am__append_34 = \
@USE_SYSTEM_ZLIB_TRUE@	ZLIB_LIBS="${ZLIB_LIBS}" \
@USE_SYSTEM_ZLIB_TRUE@	ZLIB_CFLAGS="${ZLIB_CFLAGS}"

@USE_SYSTEM_LCMS_TRUE@am__append_35 = \
@USE_SYSTEM_LCMS_TRUE@	LCMS_LIBS="${LCMS2_LIBS}" \
@USE_SYSTEM_LCMS_TRUE@	LCMS_CFLAGS="${LCMS2_CFLAGS}"

@ENABLE_JAR_COMPRESSION_TRUE@am__append_36 = \
@ENABLE_JAR_COMPRESSION_TRUE@	COMPRESS_JARS="true"

@USE_SYSTEM_JPEG_TRUE@am__append_37 = \
@USE_SYSTEM_JPEG_TRUE@	JPEG_LIBS="${JPEG_LIBS}" \
@USE_SYSTEM_JPEG_TRUE@	JPEG_CFLAGS="${JPEG_CFLAGS}"

@USE_SYSTEM_PNG_TRUE@am__append_38 = \
@USE_SYSTEM_PNG_TRUE@	PNG_LIBS="${PNG_LIBS}" \
@USE_SYSTEM_PNG_TRUE@	PNG_CFLAGS="${PNG_CFLAGS}"

@USE_SYSTEM_GIF_TRUE@am__append_39 = \
@USE_SYSTEM_GIF_TRUE@	GIF_LIBS="${GIF_LIBS}" \
@USE_SYSTEM_GIF_TRUE@	GIF_CFLAGS="${GIF_CFLAGS}"

@ENABLE_SUNEC_TRUE@am__append_40 = \
@ENABLE_SUNEC_TRUE@	NSS_LIBS="${SUNEC_LIBS}" \
@ENABLE_SUNEC_TRUE@	NSS_CFLAGS="${SUNEC_CFLAGS}"

@ADD_SHARK_BUILD_TRUE@am__append_41 = \
@ADD_SHARK_BUILD_TRUE@	--enable-shark

subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES = hotspot.map fsg.sh jconsole.desktop \
	policytool.desktop nss.cfg javac javap javah pax-mark-vm \
	remove-intree-libraries.sh tapset/hotspot.stp \
	tapset/hotspot_jni.stp tapset/jstack.stp tapset/hotspot_gc.stp \
	test/tapset/jstaptest.pl
CONFIG_CLEAN_VPATH_FILES =
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
SOURCES =
DIST_SOURCES =
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/fsg.sh.in \
	$(srcdir)/hotspot.map.in $(srcdir)/javac.in $(srcdir)/javah.in \
	$(srcdir)/javap.in $(srcdir)/jconsole.desktop.in \
	$(srcdir)/nss.cfg.in $(srcdir)/pax-mark-vm.in \
	$(srcdir)/policytool.desktop.in \
	$(srcdir)/remove-intree-libraries.sh.in \
	$(top_srcdir)/tapset/hotspot.stp.in \
	$(top_srcdir)/tapset/hotspot_gc.stp.in \
	$(top_srcdir)/tapset/hotspot_jni.stp.in \
	$(top_srcdir)/tapset/jstack.stp.in \
	$(top_srcdir)/test/tapset/jstaptest.pl.in AUTHORS COPYING \
	ChangeLog INSTALL NEWS README compile config.guess config.sub \
	install-sh missing
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ABS_CLIENT_LIBJVM_SO = @ABS_CLIENT_LIBJVM_SO@
ABS_SERVER_LIBJVM_SO = @ABS_SERVER_LIBJVM_SO@
ACLOCAL = @ACLOCAL@
ALSA_CFLAGS = @ALSA_CFLAGS@
ALSA_LIBS = @ALSA_LIBS@
ALT_CACAO_SRC_DIR = @ALT_CACAO_SRC_DIR@
ALT_CACAO_SRC_ZIP = @ALT_CACAO_SRC_ZIP@
ALT_CACERTS_FILE = @ALT_CACERTS_FILE@
ALT_CORBA_SRC_ZIP = @ALT_CORBA_SRC_ZIP@
ALT_HOTSPOT_SRC_ZIP = @ALT_HOTSPOT_SRC_ZIP@
ALT_JAMVM_SRC_ZIP = @ALT_JAMVM_SRC_ZIP@
ALT_JAR_CMD = @ALT_JAR_CMD@
ALT_JAXP_SRC_ZIP = @ALT_JAXP_SRC_ZIP@
ALT_JAXWS_SRC_ZIP = @ALT_JAXWS_SRC_ZIP@
ALT_JDK_SRC_ZIP = @ALT_JDK_SRC_ZIP@
ALT_LANGTOOLS_SRC_ZIP = @ALT_LANGTOOLS_SRC_ZIP@
ALT_NASHORN_SRC_ZIP = @ALT_NASHORN_SRC_ZIP@
ALT_OPENJDK_SRC_ZIP = @ALT_OPENJDK_SRC_ZIP@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
ARCHFLAG = @ARCHFLAG@
ARCH_PREFIX = @ARCH_PREFIX@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BUILD_ARCH_DIR = @BUILD_ARCH_DIR@
BUILD_OS_DIR = @BUILD_OS_DIR@
CACAO_CHECKSUM = @CACAO_CHECKSUM@
CACAO_IMPORT_PATH = @CACAO_IMPORT_PATH@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CHMOD = @CHMOD@

# configure script arguments, quoted in single quotes
CONFIGURE_ARGS = @CONFIGURE_ARGS@
CORBA_CHECKSUM = @CORBA_CHECKSUM@
CPIO = @CPIO@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFAULT_LIBDIR = @DEFAULT_LIBDIR@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DIST_ID = @DIST_ID@
DIST_NAME = @DIST_NAME@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
ECJ = @ECJ@
ECJ_JAR = @ECJ_JAR@
EGREP = @EGREP@
ENABLE_CACAO = @ENABLE_CACAO@
ENABLE_JAMVM = @ENABLE_JAMVM@
ENABLE_NON_NSS_CURVES = @ENABLE_NON_NSS_CURVES@
ENABLE_SHARK = @ENABLE_SHARK@
ENABLE_SYSTEM_GIF = @ENABLE_SYSTEM_GIF@
ENABLE_SYSTEM_JPEG = @ENABLE_SYSTEM_JPEG@
ENABLE_SYSTEM_LCMS = @ENABLE_SYSTEM_LCMS@
ENABLE_SYSTEM_PNG = @ENABLE_SYSTEM_PNG@
ENABLE_SYSTEM_ZLIB = @ENABLE_SYSTEM_ZLIB@
ENABLE_WARNINGS = @ENABLE_WARNINGS@
EXEEXT = @EXEEXT@
FASTJAR = @FASTJAR@
FILE = @FILE@
FIND = @FIND@
FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@
FREETYPE2_LIBS = @FREETYPE2_LIBS@
GAWK = @GAWK@
GETCONF = @GETCONF@
GIF_LIBS = @GIF_LIBS@
GREP = @GREP@
GZIP = @GZIP@
HG = @HG@
HGREV = @HGREV@
HOTSPOT_CHECKSUM = @HOTSPOT_CHECKSUM@
HOTSPOT_REVISION = @HOTSPOT_REVISION@
HSBUILD = @HSBUILD@
ICEDTEA_BRANCH = @ICEDTEA_BRANCH@
ICEDTEA_RELEASE = @ICEDTEA_RELEASE@
ICEDTEA_REVISION = @ICEDTEA_REVISION@
INSTALL = @INSTALL@
INSTALL_ARCH_DIR = @INSTALL_ARCH_DIR@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
JAMVM_CHECKSUM = @JAMVM_CHECKSUM@
JAR = @JAR@
JAR_ACCEPTS_STDIN_LIST = @JAR_ACCEPTS_STDIN_LIST@
JAR_KNOWS_ATFILE = @JAR_KNOWS_ATFILE@
JAR_KNOWS_J_OPTIONS = @JAR_KNOWS_J_OPTIONS@
JAVA = @JAVA@
JAVAC = @JAVAC@
JAVAH = @JAVAH@
JAVA_VER = @JAVA_VER@
JAXP_CHECKSUM = @JAXP_CHECKSUM@
JAXWS_CHECKSUM = @JAXWS_CHECKSUM@
JDK_CHECKSUM = @JDK_CHECKSUM@
JDK_REVISION = @JDK_REVISION@
JPEG_LIBS = @JPEG_LIBS@
JRE_ARCH_DIR = @JRE_ARCH_DIR@
LANGTOOLS_CHECKSUM = @LANGTOOLS_CHECKSUM@
LCMS2_CFLAGS = @LCMS2_CFLAGS@
LCMS2_LIBS = @LCMS2_LIBS@
LDD = @LDD@
LDFLAGS = @LDFLAGS@
LIBFFI_CFLAGS = @LIBFFI_CFLAGS@
LIBFFI_LIBS = @LIBFFI_LIBS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LINUX32 = @LINUX32@
LLVM_CFLAGS = @LLVM_CFLAGS@
LLVM_CONFIG = @LLVM_CONFIG@
LLVM_LDFLAGS = @LLVM_LDFLAGS@
LLVM_LIBS = @LLVM_LIBS@
LSB_RELEASE = @LSB_RELEASE@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKE = @MAKE@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NASHORN_CHECKSUM = @NASHORN_CHECKSUM@
NATIVE2ASCII = @NATIVE2ASCII@
NSS_CFLAGS = @NSS_CFLAGS@
NSS_JAVA_CFLAGS = @NSS_JAVA_CFLAGS@
NSS_JAVA_LIBS = @NSS_JAVA_LIBS@
NSS_LIBDIR = @NSS_LIBDIR@
NSS_LIBS = @NSS_LIBS@
NSS_SOFTOKN_CFLAGS = @NSS_SOFTOKN_CFLAGS@
NSS_SOFTOKN_LIBS = @NSS_SOFTOKN_LIBS@
OBJEXT = @OBJEXT@
OPENJDK_BUILD_DIR = @OPENJDK_BUILD_DIR@
OPENJDK_CHECKSUM = @OPENJDK_CHECKSUM@
OPENJDK_SRC_DIR = @OPENJDK_SRC_DIR@
OS_PATH = @OS_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PARALLEL_JOBS = @PARALLEL_JOBS@
PATCH = @PATCH@
PATH_SEPARATOR = @PATH_SEPARATOR@
PAX_COMMAND = @PAX_COMMAND@
PAX_COMMAND_ARGS = @PAX_COMMAND_ARGS@
PERL = @PERL@
PKGVERSION = @PKGVERSION@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
PNG_CFLAGS = @PNG_CFLAGS@
PNG_LIBS = @PNG_LIBS@
READLINK = @READLINK@
RMDIR = @RMDIR@
RMIC = @RMIC@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHA256SUM = @SHA256SUM@
SHELL = @SHELL@
STAP = @STAP@
STRIP = @STRIP@
SUNEC_CFLAGS = @SUNEC_CFLAGS@
SUNEC_LIBS = @SUNEC_LIBS@
SYSTEM_JDK_DIR = @SYSTEM_JDK_DIR@
TAR = @TAR@
UNZIP = @UNZIP@
USING_CACAO = @USING_CACAO@
USING_ECJ = @USING_ECJ@
VERSION = @VERSION@
VERSION_SUFFIX = @VERSION_SUFFIX@
WGET = @WGET@
X11_CFLAGS = @X11_CFLAGS@
X11_LIBS = @X11_LIBS@
XCOMPOSITE_CFLAGS = @XCOMPOSITE_CFLAGS@
XCOMPOSITE_LIBS = @XCOMPOSITE_LIBS@
XINERAMA_CFLAGS = @XINERAMA_CFLAGS@
XINERAMA_LIBS = @XINERAMA_LIBS@
XPROTO_CFLAGS = @XPROTO_CFLAGS@
XPROTO_LIBS = @XPROTO_LIBS@
XRENDER_CFLAGS = @XRENDER_CFLAGS@
XRENDER_LIBS = @XRENDER_LIBS@
XTST_CFLAGS = @XTST_CFLAGS@
XTST_LIBS = @XTST_LIBS@
XT_CFLAGS = @XT_CFLAGS@
XT_LIBS = @XT_LIBS@
XVFB_RUN_CMD = @XVFB_RUN_CMD@
ZERO_ARCHDEF = @ZERO_ARCHDEF@
ZERO_BITSPERWORD = @ZERO_BITSPERWORD@
ZERO_ENDIANNESS = @ZERO_ENDIANNESS@
ZERO_LIBARCH = @ZERO_LIBARCH@
ZIP = @ZIP@
ZLIB_CFLAGS = @ZLIB_CFLAGS@
ZLIB_LIBS = @ZLIB_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
enable_downloading = @enable_downloading@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
JDK_UPDATE_VERSION = 77
BUILD_VERSION = b03
COMBINED_VERSION = $(JDK_UPDATE_VERSION)-$(BUILD_VERSION)
CORBA_CHANGESET = 37af47894175
JAXP_CHANGESET = 4ed5441e40e1
JAXWS_CHANGESET = a81c04154cc5
JDK_CHANGESET = 3334efeacd83
LANGTOOLS_CHANGESET = dd581e8047e6
OPENJDK_CHANGESET = 8ed8d26a3f9a
NASHORN_CHANGESET = 697c5f792bec
CORBA_SHA256SUM = d77480d5d0c9620562a66b01fda9be4de58c2881cec680b4f2682ef09087b3cc
JAXP_SHA256SUM = 4ccce5442642561cda78116a019f5c0ea690725a374ccf5695b3af00393d26e8
JAXWS_SHA256SUM = ef550609aaa526084256a7fdf6c326015641d6d8c80540c830c0c62302a2f076
JDK_SHA256SUM = fa74b8aaa389495a685f3a28151a1957ff8ff88a4d4792059c5c1fb7c12eb1cd
LANGTOOLS_SHA256SUM = e0e0e6a7cf8575506579306f76cca872b01a3f08a4880fb9b316444fb206ea86
OPENJDK_SHA256SUM = 5b032673d74c4e2529427b9570b177285dc9a6430d016ef2e072dd2167669031
NASHORN_SHA256SUM = b4c59d8269511f2073498518e599ec91dff11c57cadc0b97fa88af81835122c0
HS_TYPE = "`$(AWK) 'version==$$1 {print $$2}' version=$(HSBUILD) $(abs_top_builddir)/hotspot.map`"
HS_URL = "`$(AWK) 'version==$$1 {print $$3}' version=$(HSBUILD) $(abs_top_builddir)/hotspot.map`"
HS_CHANGESET = "`$(AWK) 'version==$$1 {print $$4}' version=$(HSBUILD) $(abs_top_builddir)/hotspot.map`"
HS_SHA256SUM = "`$(AWK) 'version==$$1 {print $$5}' version=$(HSBUILD) $(abs_top_builddir)/hotspot.map`"
DROP_URL = http://icedtea.classpath.org/download/drops

# Drop is a snapshot of the changeset specified by CACAO_VERSION taken
# from the repository at https://bitbucket.org/gnu_andrew/cacao-staging
CACAO_VERSION = 900db2220376
CACAO_SHA256SUM = eccda2d8bdf6a60347d5479b42143209f19c3731ef93666a3d12185f759165d8
CACAO_BASE_URL = $(DROP_URL)/cacao
CACAO_SRC_ZIP = cacao-$(CACAO_VERSION).tar.xz
CACAO_URL = $(CACAO_BASE_URL)/$(CACAO_SRC_ZIP)
JAMVM_VERSION = ec18fb9e49e62dce16c5094ef1527eed619463aa
JAMVM_SHA256SUM = 31810266666c23822942aac62a78019c2c4589e1c5ee48329cbf42652d4437bc
JAMVM_BASE_URL = $(DROP_URL)/jamvm
JAMVM_URL = $(JAMVM_BASE_URL)/jamvm-$(JAMVM_VERSION).tar.gz
JAMVM_SRC_ZIP = jamvm-$(JAMVM_VERSION).tar.gz
ICEDTEA_MAJOR = icedtea8
ICEDTEA_PREFIX = $(ICEDTEA_MAJOR)-forest
ICEDTEA_HG_URL = http://icedtea.classpath.org/hg/$(ICEDTEA_PREFIX)
ICEDTEA_URL = $(DROP_URL)/$(ICEDTEA_MAJOR)/$(ICEDTEA_RELEASE)

# Build directories
BUILD_DIR = @OPENJDK_BUILD_DIR@
BUILD_OUTPUT_DIR = $(abs_top_builddir)/$(BUILD_DIR)
DEBUG_BUILD_OUTPUT_DIR = $(BUILD_OUTPUT_DIR)-debug
BOOT_BUILD_OUTPUT_DIR = $(BUILD_OUTPUT_DIR)-boot
BOOT_DIR = $(abs_top_builddir)/bootstrap/jdk1.7.0
RUNTIME = $(BOOT_DIR)/jre/lib/rt.jar
CLS_DIR_BOOT = $(BOOT_BUILD_OUTPUT_DIR)/classes
SERVER_DIR = hotspot/dist/jre/lib/$(INSTALL_ARCH_DIR)/server
BUILD_IMAGE_DIR = $(BUILD_OUTPUT_DIR)/images
BUILD_SDK_DIR = $(BUILD_IMAGE_DIR)/j2sdk-image
BUILD_JRE_DIR = $(BUILD_IMAGE_DIR)/j2re-image
BUILD_JRE_ARCH_DIR = $(BUILD_SDK_DIR)/jre/lib/$(INSTALL_ARCH_DIR)
BUILD_DEBUG_IMAGE_DIR = $(DEBUG_BUILD_OUTPUT_DIR)/images
BUILD_DEBUG_SDK_DIR = $(BUILD_DEBUG_IMAGE_DIR)/j2sdk-image
BUILD_DEBUG_JRE_DIR = $(BUILD_DEBUG_IMAGE_DIR)/j2re-image
BUILD_DEBUG_JRE_ARCH_DIR = $(BUILD_DEBUG_SDK_DIR)/jre/lib/$(INSTALL_ARCH_DIR)
BUILD_BOOT_IMAGE_DIR = $(BOOT_BUILD_OUTPUT_DIR)/images
BUILD_BOOT_SDK_DIR = $(BUILD_BOOT_IMAGE_DIR)/j2sdk-image
BUILD_BOOT_JRE_DIR = $(BUILD_BOOT_IMAGE_DIR)/j2re-image
STAGE1_BOOT_DIR = $(abs_top_builddir)/bootstrap/boot
STAGE2_BOOT_DIR = $(abs_top_builddir)/bootstrap/icedtea
JAMVM_IMPORT_PATH = $(abs_top_builddir)/jamvm/install/hotspot
CRYPTO_CHECK_BUILD_DIR = $(abs_top_builddir)/test/cryptocheck.build
ECC_CHECK_BUILD_DIR = $(abs_top_builddir)/test/ecccheck.build

# Source directories
SHARE = openjdk-boot/jdk/src/share/classes
SOLARIS = openjdk-boot/jdk/src/solaris/classes
LANGTOOLS = openjdk-boot/langtools/src/share/classes
CORBA = openjdk-boot/corba/src/share/classes
JAXWS = openjdk-boot/jaxws/src/share/jaxws_classes
OPENJDK_SOURCEPATH_DIRS = \
        $(SHARE):$(SOLARIS):$(LANGTOOLS):$(CORBA):$(JAXWS)

SOURCEPATH_DIRS = $(OPENJDK_SOURCEPATH_DIRS)
VERSION_SETTINGS_FILE = openjdk/jdk/make/ProfileNames.gmk
VERSION_SETTINGS_FILE_BACKUP = $$(basename $(VERSION_SETTINGS_FILE)).bak
CACERTS_FILE = @ALT_CACERTS_FILE@

# Settings for javac
IT_LANGUAGE_SOURCE_VERSION = 6
IT_CLASS_TARGET_VERSION = 6
IT_JAVAC_SETTINGS = -g -encoding utf-8 $(JAVACFLAGS) $(MEMORY_LIMIT) $(PREFER_SOURCE)
IT_JAVACFLAGS = $(IT_JAVAC_SETTINGS) -source $(IT_LANGUAGE_SOURCE_VERSION) -target $(IT_CLASS_TARGET_VERSION)

# Flags
IT_CFLAGS = $(CFLAGS) $(ARCHFLAG)
ICEDTEA_MAKE = $(subst -j,JOBS=,$(MAKE))
@USE_HG_FALSE@OPENJDK_SRC_ZIP = openjdk.tar.xz

# Conditional defintions
@USE_HG_TRUE@OPENJDK_SRC_ZIP = 
@USE_HG_FALSE@CORBA_SRC_ZIP = corba.tar.xz
@USE_HG_TRUE@CORBA_SRC_ZIP = 
@USE_HG_FALSE@JAXP_SRC_ZIP = jaxp.tar.xz
@USE_HG_TRUE@JAXP_SRC_ZIP = 
@USE_HG_FALSE@JAXWS_SRC_ZIP = jaxws.tar.xz
@USE_HG_TRUE@JAXWS_SRC_ZIP = 
@USE_HG_FALSE@JDK_SRC_ZIP = jdk.tar.xz
@USE_HG_TRUE@JDK_SRC_ZIP = 
@USE_HG_FALSE@LANGTOOLS_SRC_ZIP = langtools.tar.xz
@USE_HG_TRUE@LANGTOOLS_SRC_ZIP = 
@USE_HG_FALSE@HOTSPOT_SRC_ZIP = hotspot.tar.xz
@USE_HG_TRUE@HOTSPOT_SRC_ZIP = 
@USE_HG_FALSE@NASHORN_SRC_ZIP = nashorn.tar.xz
@USE_HG_TRUE@NASHORN_SRC_ZIP = 
@DISABLE_OPENJDK_CHECKSUM_FALSE@OPENJDK_SHA256SUM_BIN = $(SHA256SUM)
@DISABLE_OPENJDK_CHECKSUM_TRUE@OPENJDK_SHA256SUM_BIN = true
@WITH_OPENJDK_CHECKSUM_FALSE@OPENJDK_SUM = $(OPENJDK_SHA256SUM)
@WITH_OPENJDK_CHECKSUM_TRUE@OPENJDK_SUM = @OPENJDK_CHECKSUM@
@DISABLE_CORBA_CHECKSUM_FALSE@CORBA_SHA256SUM_BIN = $(SHA256SUM)
@DISABLE_CORBA_CHECKSUM_TRUE@CORBA_SHA256SUM_BIN = true
@WITH_CORBA_CHECKSUM_FALSE@CORBA_SUM = $(CORBA_SHA256SUM)
@WITH_CORBA_CHECKSUM_TRUE@CORBA_SUM = @CORBA_CHECKSUM@
@DISABLE_JAXP_CHECKSUM_FALSE@JAXP_SHA256SUM_BIN = $(SHA256SUM)
@DISABLE_JAXP_CHECKSUM_TRUE@JAXP_SHA256SUM_BIN = true
@WITH_JAXP_CHECKSUM_FALSE@JAXP_SUM = $(JAXP_SHA256SUM)
@WITH_JAXP_CHECKSUM_TRUE@JAXP_SUM = @JAXP_CHECKSUM@
@DISABLE_JAXWS_CHECKSUM_FALSE@JAXWS_SHA256SUM_BIN = $(SHA256SUM)
@DISABLE_JAXWS_CHECKSUM_TRUE@JAXWS_SHA256SUM_BIN = true
@WITH_JAXWS_CHECKSUM_FALSE@JAXWS_SUM = $(JAXWS_SHA256SUM)
@WITH_JAXWS_CHECKSUM_TRUE@JAXWS_SUM = @JAXWS_CHECKSUM@
@DISABLE_JDK_CHECKSUM_FALSE@JDK_SHA256SUM_BIN = $(SHA256SUM)
@DISABLE_JDK_CHECKSUM_TRUE@JDK_SHA256SUM_BIN = true
@WITH_JDK_CHECKSUM_FALSE@JDK_SUM = $(JDK_SHA256SUM)
@WITH_JDK_CHECKSUM_TRUE@JDK_SUM = @JDK_CHECKSUM@
@DISABLE_LANGTOOLS_CHECKSUM_FALSE@LANGTOOLS_SHA256SUM_BIN = $(SHA256SUM)
@DISABLE_LANGTOOLS_CHECKSUM_TRUE@LANGTOOLS_SHA256SUM_BIN = true
@WITH_LANGTOOLS_CHECKSUM_FALSE@LANGTOOLS_SUM = $(LANGTOOLS_SHA256SUM)
@WITH_LANGTOOLS_CHECKSUM_TRUE@LANGTOOLS_SUM = @LANGTOOLS_CHECKSUM@
@DISABLE_CACAO_CHECKSUM_FALSE@CACAO_SHA256SUM_BIN = $(SHA256SUM)
@DISABLE_CACAO_CHECKSUM_TRUE@CACAO_SHA256SUM_BIN = true
@WITH_CACAO_CHECKSUM_FALSE@CACAO_SUM = $(CACAO_SHA256SUM)
@WITH_CACAO_CHECKSUM_TRUE@CACAO_SUM = @CACAO_CHECKSUM@
@DISABLE_JAMVM_CHECKSUM_FALSE@JAMVM_SHA256SUM_BIN = $(SHA256SUM)
@DISABLE_JAMVM_CHECKSUM_TRUE@JAMVM_SHA256SUM_BIN = true
@WITH_JAMVM_CHECKSUM_FALSE@JAMVM_SUM = $(JAMVM_SHA256SUM)
@WITH_JAMVM_CHECKSUM_TRUE@JAMVM_SUM = @JAMVM_CHECKSUM@
@DISABLE_HOTSPOT_CHECKSUM_FALSE@HOTSPOT_SHA256SUM_BIN = $(SHA256SUM)
@DISABLE_HOTSPOT_CHECKSUM_TRUE@HOTSPOT_SHA256SUM_BIN = true
@WITH_HOTSPOT_CHECKSUM_FALSE@HOTSPOT_SUM = $(HS_SHA256SUM)
@WITH_HOTSPOT_CHECKSUM_TRUE@HOTSPOT_SUM = @HOTSPOT_CHECKSUM@
@DISABLE_NASHORN_CHECKSUM_FALSE@NASHORN_SHA256SUM_BIN = $(SHA256SUM)
@DISABLE_NASHORN_CHECKSUM_TRUE@NASHORN_SHA256SUM_BIN = true
@WITH_NASHORN_CHECKSUM_FALSE@NASHORN_SUM = $(NASHORN_SHA256SUM)
@WITH_NASHORN_CHECKSUM_TRUE@NASHORN_SUM = @NASHORN_CHECKSUM@
@WITH_HGREV_TRUE@REV_ARG = -r $(HGREV)
@BOOTSTRAPPING_FALSE@MEMORY_LIMIT = -J-Xmx1024m

# This should not depend on bootstrapping
# but on whether MEMORY_LIMIT is accepted
# as an argument to javac
@BOOTSTRAPPING_TRUE@MEMORY_LIMIT = 
@BOOTSTRAPPING_FALSE@PREFER_SOURCE = -Xprefer:source
@BOOTSTRAPPING_TRUE@PREFER_SOURCE = 
ICEDTEA_BUILD_TARGET = images $(am__append_1)
@BOOTSTRAPPING_FALSE@BOOTSTRAP_DIRECTORY_STAMP = 
@BOOTSTRAPPING_TRUE@BOOTSTRAP_DIRECTORY_STAMP = stamps/bootstrap-directory-stage2.stamp
@BOOTSTRAPPING_FALSE@ICEDTEA_HOME = $(SYSTEM_JDK_DIR)
@BOOTSTRAPPING_TRUE@ICEDTEA_HOME = $(STAGE2_BOOT_DIR)
@BOOTSTRAPPING_FALSE@INITIAL_BOOTSTRAP_LINK_STAMP = stamps/bootstrap-directory-symlink-stage2.stamp
@BOOTSTRAPPING_TRUE@INITIAL_BOOTSTRAP_LINK_STAMP = stamps/bootstrap-directory-symlink-stage1.stamp
@CP_SUPPORTS_REFLINK_TRUE@REFLINK = --reflink=auto
@OPENJDK_SRC_DIR_HARDLINKABLE_FALSE@OPENJDK_SRC_DIR_LINK = $(REFLINK)
@OPENJDK_SRC_DIR_HARDLINKABLE_TRUE@OPENJDK_SRC_DIR_LINK = -l
@SRC_DIR_HARDLINKABLE_FALSE@SRC_DIR_LINK = $(REFLINK)
@SRC_DIR_HARDLINKABLE_TRUE@SRC_DIR_LINK = -l
@DISABLE_HOTSPOT_TESTS_FALSE@HOTSPOT_TEST_SUITE = hotspot
@DISABLE_JDK_TESTS_FALSE@JDK_TEST_SUITE = jdk
@DISABLE_LANGTOOLS_TESTS_FALSE@LANGTOOLS_TEST_SUITE = langtools
@DISABLE_TESTS_FALSE@TEST_SUITES = $(HOTSPOT_TEST_SUITE) $(JDK_TEST_SUITE) $(LANGTOOLS_TEST_SUITE)
@DISABLE_TESTS_FALSE@TESTS_TO_RUN = jtreg $(addprefix check-,$(TEST_SUITES))
@DISABLE_SYSTEMTAP_TESTS_FALSE@SYSTEMTAP_TEST_SUITE = check-tapset
@ENABLE_SUNEC_FALSE@ECC_RESULT = no
@ENABLE_SUNEC_TRUE@ECC_RESULT = yes

# Target to ensure a patched OpenJDK tree containing Zero & Shark
# and any overlays is available in $(abs_top_builddir)/openjdk
OPENJDK_TREE = stamps/overlay.stamp

# Target to ensure a patched OpenJDK bootstrap tree containing
# Zero & Shark, any other overlays and the bootstrapping patches
# is available in $(abs_top_builddir)/openjdk-boot
OPENJDK_BOOT_TREE = stamps/patch-boot.stamp

# Sources list
CRYPTO_CHECK_SRCS = $(top_srcdir)/test/standalone/TestCryptoLevel.java
ECC_CHECK_SRCS = $(top_srcdir)/test/standalone/TestEllipticCurveCryptoSupport.java

# Patch list
ICEDTEA_PATCHES = patches/memory-limits.patch \
	patches/override-redirect-metacity.patch $(am__append_2) \
	$(am__append_3) $(am__append_4) $(am__append_5) \
	$(am__append_6) $(am__append_7) $(am__append_8) \
	$(am__append_9) $(am__append_10) $(am__append_11) \
	$(DISTRIBUTION_PATCHES)

# Bootstrapping patches
ICEDTEA_BOOT_PATCHES = $(DISTRIBUTION_BOOT_PATCHES)

# OpenJDK build environment.
ICEDTEA_NAME = IcedTea
@HAS_ICEDTEA_REVISION_TRUE@ICEDTEA_REV = +${ICEDTEA_REVISION}
@HAS_PKGVERSION_TRUE@ICEDTEA_PKG = $(EMPTY) (${PKGVERSION})
ICEDTEA_CONFIGURE = --build=$(build_triplet) --host=$(host_triplet) \
	--enable-unlimited-crypto --with-stdc++lib=dynamic \
	--with-boot-jdk=$(BOOT_DIR) \
	--with-update-version=$(JDK_UPDATE_VERSION) \
	--with-build-number=$(BUILD_VERSION) --with-milestone="fcs" \
	--with-extra-cflags="$(CFLAGS)" \
	--with-extra-cxxflags="$(CXXFLAGS)" \
	--with-extra-ldflags="$(LDFLAGS)" $(am__append_12) \
	$(am__append_13) $(am__append_14) $(am__append_15) \
	$(am__append_16) $(am__append_17) $(am__append_18) \
	$(am__append_19) $(am__append_20) $(am__append_21) \
	$(am__append_22) $(am__append_23) $(am__append_24) \
	$(am__append_25) $(am__append_26) $(am__append_27) \
	$(am__append_28) $(am__append_29) $(am__append_30)
ICEDTEA_UNSET = \
	JAVAC= \
	JAVA_HOME= \
	JDK_HOME= \
	OS=

ICEDTEA_ENV = LANG="C" PATH="$(BOOT_DIR)/bin:$(OS_PATH):$$PATH" \
	CLASSPATH="" LD_LIBRARY_PATH="" ZERO_LIBARCH="$(ZERO_LIBARCH)" \
	ARCH_DATA_MODEL="$(ZERO_BITSPERWORD)" \
	ZERO_ENDIANNESS="$(ZERO_ENDIANNESS)" \
	ZERO_ARCHDEF="$(ZERO_ARCHDEF)" ZERO_ARCHFLAG="$(ARCHFLAG)" \
	LIBFFI_CFLAGS="$(LIBFFI_CFLAGS)" LIBFFI_LIBS="$(LIBFFI_LIBS)" \
	LLVM_CFLAGS="$(LLVM_CFLAGS)" LLVM_LDFLAGS="$(LLVM_LDFLAGS)" \
	LLVM_LIBS="$(LLVM_LIBS)" QUIETLY="" \
	ANT_RESPECT_JAVA_HOME="TRUE" DISTRIBUTION_ID="$(DIST_ID)" \
	DERIVATIVE_ID="$(ICEDTEA_NAME) \
	$(PACKAGE_VERSION)$(ICEDTEA_REV)" DEBUG_CLASSFILES="true" \
	DEBUG_BINARIES="true" LOG="debug" SCTP_WERROR= POST_STRIP_CMD= \
	STRIP_POLICY="no_strip" JOBS="$(PARALLEL_JOBS)" \
	INSTALL_LOCATION="${prefix}" $(am__append_31) $(am__append_32) \
	$(am__append_33) $(am__append_34) $(am__append_35) \
	$(am__append_36) $(am__append_37) $(am__append_38) \
	$(am__append_39) $(am__append_40)

# OpenJDK boot build environment.
ICEDTEA_CONFIGURE_BOOT = $(ICEDTEA_CONFIGURE)
ICEDTEA_ENV_BOOT = $(ICEDTEA_ENV) \
	JAR_KNOWS_ATFILE="$(JAR_KNOWS_ATFILE)" \
	JAR_KNOWS_J_OPTIONS="$(JAR_KNOWS_J_OPTIONS)" \
	JAR_ACCEPTS_STDIN_LIST="$(JAR_ACCEPTS_STDIN_LIST)" \
	DISABLE_NIMBUS="true"


# Source files
JTREG_SRCS = $(top_srcdir)/test/jtreg/com/sun/javatest/cof/i18n.properties \
	$(top_srcdir)/test/jtreg/com/sun/javatest/cof/COF2_0_2.xsd \
	$(top_srcdir)/test/jtreg/com/sun/javatest/cof/*.java \
	$(top_srcdir)/test/jtreg/com/sun/javatest/lib/*.java \
	$(top_srcdir)/test/jtreg/com/sun/javatest/diff/*.java \
	$(top_srcdir)/test/jtreg/com/sun/javatest/diff/i18n.properties \
	$(top_srcdir)/test/jtreg/com/sun/javatest/exec/*.java \
	$(top_srcdir)/test/jtreg/com/sun/javatest/exec/i18n.properties \
	$(top_srcdir)/test/jtreg/com/sun/javatest/exec/images/*.gif \
	$(top_srcdir)/test/jtreg/com/sun/javatest/mrep/i18n.properties \
	$(top_srcdir)/test/jtreg/com/sun/javatest/mrep/*.java \
	$(top_srcdir)/test/jtreg/com/sun/javatest/mrep/images/dotdotdot.gif \
	$(top_srcdir)/test/jtreg/com/sun/javatest/mrep/images/Forward16.gif \
	$(top_srcdir)/test/jtreg/com/sun/javatest/mrep/images/Back16.gif \
	$(top_srcdir)/test/jtreg/com/sun/javatest/mrep/images/Home16.gif \
	$(top_srcdir)/test/jtreg/com/sun/javatest/tool/*.java \
	$(top_srcdir)/test/jtreg/com/sun/javatest/tool/i18n.properties \
	$(top_srcdir)/test/jtreg/com/sun/javatest/tool/images/*.gif \
	$(top_srcdir)/test/jtreg/com/sun/javatest/tool/package.html \
	$(top_srcdir)/test/jtreg/com/sun/javatest/util/*.java \
	$(top_srcdir)/test/jtreg/com/sun/javatest/util/i18n.properties \
	$(top_srcdir)/test/jtreg/com/sun/javatest/util/package.html \
	$(top_srcdir)/test/jtreg/com/sun/javatest/*.java \
	$(top_srcdir)/test/jtreg/com/sun/javatest/i18n.properties \
	$(top_srcdir)/test/jtreg/com/sun/javatest/regtest/*.java \
	$(top_srcdir)/test/jtreg/com/sun/javatest/regtest/i18n.properties \
	$(top_srcdir)/test/jtreg/com/sun/javatest/agent/*.java \
	$(top_srcdir)/test/jtreg/com/sun/javatest/agent/i18n.properties \
	$(top_srcdir)/test/jtreg/com/sun/javatest/agent/jticon.gif \
	$(top_srcdir)/test/jtreg/com/sun/javatest/agent/package.html \
	$(top_srcdir)/test/jtreg/com/sun/javatest/batch/i18n.properties \
	$(top_srcdir)/test/jtreg/com/sun/javatest/batch/*.java \
	$(top_srcdir)/test/jtreg/com/sun/javatest/batch/package.html \
	$(top_srcdir)/test/jtreg/com/sun/javatest/audit/i18n.properties \
	$(top_srcdir)/test/jtreg/com/sun/javatest/audit/*.java \
	$(top_srcdir)/test/jtreg/com/sun/javatest/audit/images/dotdotdot.gif \
	$(top_srcdir)/test/jtreg/com/sun/javatest/audit/package.html \
	$(top_srcdir)/test/jtreg/com/sun/javatest/httpd/*.java \
	$(top_srcdir)/test/jtreg/com/sun/javatest/httpd/i18n.properties \
	$(top_srcdir)/test/jtreg/com/sun/javatest/stylesheet.css \
	$(top_srcdir)/test/jtreg/com/sun/javatest/logging/i18n.properties \
	$(top_srcdir)/test/jtreg/com/sun/javatest/logging/*.java \
	$(top_srcdir)/test/jtreg/com/sun/javatest/finder/i18n.properties \
	$(top_srcdir)/test/jtreg/com/sun/javatest/finder/*.java \
	$(top_srcdir)/test/jtreg/com/sun/javatest/finder/package.html \
	$(top_srcdir)/test/jtreg/com/sun/javatest/report/i18n.properties \
	$(top_srcdir)/test/jtreg/com/sun/javatest/report/package.html \
	$(top_srcdir)/test/jtreg/com/sun/javatest/report/*.java \
	$(top_srcdir)/test/jtreg/com/sun/javatest/interview/i18n.properties \
	$(top_srcdir)/test/jtreg/com/sun/javatest/interview/*.java \
	$(top_srcdir)/test/jtreg/com/sun/javatest/interview/package.html \
	$(top_srcdir)/test/jtreg/com/sun/javatest/package.html \
	$(top_srcdir)/test/jtreg/com/sun/interview/i18n.properties \
	$(top_srcdir)/test/jtreg/com/sun/interview/*.java \
	$(top_srcdir)/test/jtreg/com/sun/interview/wizard/*.java \
	$(top_srcdir)/test/jtreg/com/sun/interview/wizard/i18n.properties \
	$(top_srcdir)/test/jtreg/com/sun/interview/wizard/done.gif \
	$(top_srcdir)/test/jtreg/com/sun/interview/wizard/blank.gif \
	$(top_srcdir)/test/jtreg/com/sun/interview/wizard/history.gif \
	$(top_srcdir)/test/jtreg/com/sun/interview/wizard/find.gif \
	$(top_srcdir)/test/jtreg/com/sun/interview/wizard/check.gif \
	$(top_srcdir)/test/jtreg/com/sun/interview/wizard/arrow.gif \
	$(top_srcdir)/test/jtreg/com/sun/interview/wizard/back.gif \
	$(top_srcdir)/test/jtreg/com/sun/interview/wizard/next.gif \
	$(top_srcdir)/test/jtreg/com/sun/interview/wizard/info.gif \
	$(top_srcdir)/test/jtreg/com/sun/interview/wizard/package.html \
	$(top_srcdir)/test/jtreg/com/sun/interview/wizard/cancel.gif \
	$(top_srcdir)/test/jtreg/com/sun/interview/package.html \
	$(top_srcdir)/test/jtreg/JavaTest.toolMgrs.lst \
	$(top_srcdir)/test/jtreg/legal/license.txt \
	$(top_srcdir)/test/jtreg/legal/copyright.txt \
	$(top_srcdir)/test/jtreg/README \
	$(top_srcdir)/test/jtreg/META-INF/MANIFEST.MF \
	$(top_srcdir)/test/jtreg/excludelist.jdk.jtx \
	$(top_srcdir)/test/jtreg/excludelist.jdk.cacao.jtx \
	$(top_srcdir)/test/jtreg/JavaTest.cmdMgrs.lst \
	$(top_srcdir)/test/jtreg/excludelist.langtools.jtx 

DESKTOP_FILES = jconsole-@JAVA_VER@.desktop policytool-@JAVA_VER@.desktop
EXTRA_DIST = $(top_srcdir)/patches/*.patch \
	$(top_srcdir)/patches/cacao/*.patch \
	$(top_srcdir)/patches/jamvm/*.patch \
	tools-copy contrib overlays \
	$(JTREG_SRCS) HACKING autogen.sh \
	tapset/hotspot.stp.in \
	tapset/hotspot_jni.stp.in \
	tapset/jstack.stp.in \
	tapset/hotspot_gc.stp.in \
	scripts/jni_create_stap.c \
	scripts/jni_desc \
	THANKYOU test/tapset \
	$(CRYPTO_CHECK_SRCS) \
	$(ECC_CHECK_SRCS)

ADD_ZERO_CONFIGURE_ARGS = --with-jdk-home=$(BUILD_SDK_DIR) \
	--disable-bootstrap --enable-zero $(am__append_41) \
	--disable-docs $(filter-out '--with-jdk-home=% '--with-ecj=% \
	'--with-java=% '--with-javah=% '--with-javac=% '--with-javac=% \
	'--with-rmic=% '--with-additional-vms=% '--disable-bootstrap% \
	'--enable-bootstrap% , $(CONFIGURE_ARGS)) $(foreach i, openjdk \
	hotspot corba jaxp jaxws jdk langtools, $(if $(findstring \
	--with-$(i)-src-zip=, $(CONFIGURE_ARGS)),, \
	--with-$(i)-src-zip=$(abs_top_builddir)/$(i).tar.xz))
ADD_ZERO_EXTRA_BUILD_ENV = \
	BUILD_LANGTOOLS=false ALT_LANGTOOLS_DIST=$(BUILD_OUTPUT_DIR)/langtools/dist \
	BUILD_JAXP=false      ALT_JAXP_DIST=$(BUILD_OUTPUT_DIR)/jaxp/dist \
	BUILD_JAXWS=false     ALT_JAXWS_DIST=$(BUILD_OUTPUT_DIR)/jaxws/dist \
	BUILD_CORBA=false     ALT_CORBA_DIST=$(BUILD_OUTPUT_DIR)/corba/dist \
	BUILD_JDK=false \
	DISTRIBUTION_PATCHES='$(foreach p,$(DISTRIBUTION_PATCHES),$(if $(findstring cacao,$(p)),,$(if $(findstring jamvm,$(p)),,$(p))))'


# FIXME: this might need some adjustment for other OS than Linux
jtreg_processes = ps x -ww -o pid,ppid,args \
	| awk '$$2 == 1 && $$3 ~ /^$(subst /,\/,/scratch)/' \
	| $(SED) 's,$(CURDIR)/$(sdkimg),<sdkimg>,g;s,$(CURDIR),<pwd>,g'

jtreg_pids = ps x --no-headers -ww -o pid,ppid,args \
	| awk '$$2 == 1 && $$3 ~ /^$(subst /,\/,$(CURDIR)/$(sdkimg))/ {print $$1}'

all: all-am

.SUFFIXES:
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):
hotspot.map: $(top_builddir)/config.status $(srcdir)/hotspot.map.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
fsg.sh: $(top_builddir)/config.status $(srcdir)/fsg.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
jconsole.desktop: $(top_builddir)/config.status $(srcdir)/jconsole.desktop.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
policytool.desktop: $(top_builddir)/config.status $(srcdir)/policytool.desktop.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
nss.cfg: $(top_builddir)/config.status $(srcdir)/nss.cfg.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
javac: $(top_builddir)/config.status $(srcdir)/javac.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
javap: $(top_builddir)/config.status $(srcdir)/javap.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
javah: $(top_builddir)/config.status $(srcdir)/javah.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
pax-mark-vm: $(top_builddir)/config.status $(srcdir)/pax-mark-vm.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
remove-intree-libraries.sh: $(top_builddir)/config.status $(srcdir)/remove-intree-libraries.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
tapset/hotspot.stp: $(top_builddir)/config.status $(top_srcdir)/tapset/hotspot.stp.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
tapset/hotspot_jni.stp: $(top_builddir)/config.status $(top_srcdir)/tapset/hotspot_jni.stp.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
tapset/jstack.stp: $(top_builddir)/config.status $(top_srcdir)/tapset/jstack.stp.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
tapset/hotspot_gc.stp: $(top_builddir)/config.status $(top_srcdir)/tapset/hotspot_gc.stp.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
test/tapset/jstaptest.pl: $(top_builddir)/config.status $(top_srcdir)/test/tapset/jstaptest.pl.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
tags TAGS:

ctags CTAGS:

cscope cscopelist:


distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-am
all-am: Makefile all-local
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-local mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -f Makefile
distclean-am: clean-am distclean-generic distclean-local

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-data-local

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-exec-local

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-local

.MAKE: check-am install-am install-strip

.PHONY: all all-am all-local am--refresh check check-am check-local \
	clean clean-generic clean-local cscopelist-am ctags-am dist \
	dist-all dist-bzip2 dist-gzip dist-lzip dist-shar dist-tarZ \
	dist-xz dist-zip distcheck distclean distclean-generic \
	distclean-local distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-data-local install-dvi \
	install-dvi-am install-exec install-exec-am install-exec-local \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-generic pdf pdf-am ps ps-am tags-am \
	uninstall uninstall-am uninstall-local

.PRECIOUS: Makefile


# Top-Level Targets
# =================

all-local: icedtea-stage2 $(DESKTOP_FILES)

check-local: jtregcheck $(SYSTEMTAP_TEST_SUITE) stamps/check-ecc.stamp

clean-tests: clean-jtreg clean-tapset-report clean-jtreg-reports clean-check-ecc

clean-local: clean-tests \
 clean-icedtea clean-icedtea-debug clean-icedtea-boot clean-clone clean-clone-boot \
 clean-bootstrap-directory-stage1 clean-bootstrap-directory-stage2 \
 clean-bootstrap-directory-symlink-stage1 clean-bootstrap-directory-symlink-stage2 \
 clean-extract clean-icedtea-stage2 clean-icedtea-debug-stage2 clean-icedtea-stage1 \
 clean-add-zero clean-add-zero-debug clean-add-cacao clean-add-cacao-debug \
 clean-cryptocheck clean-ecccheck clean-policytool-@JAVA_VER@.desktop \
 clean-jconsole-@JAVA_VER@.desktop
	if [ -e bootstrap ]; then \
	  rmdir bootstrap ; \
	fi
	if [ -e lib ]; then \
	  rmdir lib ; \
	fi

distclean-local: clean-local clean-download
	if [ $(abs_top_srcdir) != $(abs_top_builddir) ]; then \
	  if [ -e tapset ] ; then \
	    rmdir tapset ; \
	  fi ; \
	fi
	if [ -e stamps ] ; then \
	  rmdir stamps ; \
	fi

.PHONY: \
	env env-boot snapshot clean-clone clean-patch \
	clean-clone-boot clean-patch-boot clean-bootstrap-directory-stage2 \
	clean-bootstrap-directory-symlink-stage2 clean-bootstrap-directory-stage1 \
	clean-bootstrap-directory-symlink-stage1 icedtea icedtea-debug \
	clean-icedtea icedtea-stage2 clean-icedtea-boot \
	hotspot hotspot-helper clean-jtreg clean-jtreg-reports \
	jtregcheck clean-remove-intree-libraries \
	clean-jamvm clean-extract-jamvm clean-add-jamvm clean-add-jamvm-debug \
	clean-extract-hotspot clean-sanitise-openjdk clean-icedtea-debug \
	clean-download-nashorn clean-extract-nashorn clean-download-hotspot \
	clean-download-corba clean-download-jaxp clean-download-jaxws \
	clean-download-langtools clean-download-jdk clean-download-openjdk \
	clean-extract-corba clean-extract-jaxp clean-extract-jaxws clean-extract-jdk \
	clean-extract-langtools clean-check-crypto clean-check-crypto-debug clean-check-crypto-boot \
	clean-add-archive clean-add-archive-debug clean-add-archive-boot clean-cryptocheck \
	clean-tests clean-tapset-report clean-ecccheck clean-check-ecc \
	check-jdk check-hotspot check-langtools jtregcheck check-tapset check-tapset-probes \
	check-tapset-jstack clean-policytool-@JAVA_VER@.desktop clean-jconsole-@JAVA_VER@.desktop

env:
	@echo 'unset JAVA_HOME'
	@echo 'export $(ICEDTEA_ENV)'

env-boot:
	@echo 'unset JAVA_HOME'
	@echo 'export $(ICEDTEA_ENV_BOOT)'

# Mercurial snapshot.
snapshot: dist
	mv $(DIST_ARCHIVES) $(distdir)-`$(HG) tip --template '{node}'`.tar.gz

# Creates archive of openjdk.
dist-openjdk: stamps/extract-cacao.stamp
	find openjdk/ -name \\.hg* | xargs rm -rf	
	$(ZIP) -r openjdk-$(COMBINED_VERSION) openjdk/

# Creates archive of openjdk that is compliant with Free Software guidelines.
dist-openjdk-fsg: stamps/patch-fsg.stamp
	$(ZIP) -r openjdk-fsg-$(COMBINED_VERSION) openjdk/

dist-openjdk-fsg-xz: stamps/patch-fsg.stamp
	tardir=openjdk/ && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c \
	  >openjdk-fsg-$(COMBINED_VERSION).tar.xz

# OpenJDK Source Preparation Targets
# ==================================

# Download OpenJDK sources.

stamps/download.stamp: stamps/download-openjdk.stamp stamps/download-corba.stamp \
 stamps/download-jaxp.stamp stamps/download-jaxws.stamp stamps/download-jdk.stamp \
 stamps/download-cacao.stamp stamps/download-jamvm.stamp stamps/download-hotspot.stamp \
 stamps/download-langtools.stamp stamps/download-nashorn.stamp
	mkdir -p stamps
	touch $@

clean-download: clean-download-openjdk clean-download-cacao clean-download-jamvm \
 clean-download-hotspot clean-download-corba clean-download-jaxp clean-download-jaxws \
 clean-download-jdk clean-download-langtools clean-download-nashorn
	rm -f stamps/download.stamp

stamps/download-openjdk.stamp:
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_ALT_OPENJDK_SRC_ZIP_TRUE@@USE_HG_FALSE@	ln -sf $(ALT_OPENJDK_SRC_ZIP) $(OPENJDK_SRC_ZIP)
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	if ! echo "$(OPENJDK_SUM)  $(OPENJDK_SRC_ZIP)" \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  | $(OPENJDK_SHA256SUM_BIN) --check ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  if test "x$(enable_downloading)" = "xyes"; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    if [ -e $(OPENJDK_SRC_ZIP) ] ; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      mv $(OPENJDK_SRC_ZIP) $(OPENJDK_SRC_ZIP).old ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    $(WGET) $(ICEDTEA_URL)/$(OPENJDK_SRC_ZIP); \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    if ! echo "$(OPENJDK_SUM)  $(OPENJDK_SRC_ZIP)" \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      | $(SHA256SUM) --check ; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      echo "ERROR: Bad download of OpenJDK root zip"; false; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    fi; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  else \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    echo "ERROR: No up-to-date OpenJDK root zip available"; exit -1; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	fi ;
	mkdir -p stamps
	touch $@

stamps/download-corba.stamp:
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_ALT_CORBA_SRC_ZIP_TRUE@@USE_HG_FALSE@	ln -sf $(ALT_CORBA_SRC_ZIP) $(CORBA_SRC_ZIP)
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	if ! echo "$(CORBA_SUM)  $(CORBA_SRC_ZIP)" \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  | $(CORBA_SHA256SUM_BIN) --check ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  if test "x$(enable_downloading)" = "xyes"; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    if [ $(CORBA_SRC_ZIP) ] ; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      mv $(CORBA_SRC_ZIP) $(CORBA_SRC_ZIP).old ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    $(WGET) $(ICEDTEA_URL)/$(CORBA_SRC_ZIP); \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    if ! echo "$(CORBA_SUM)  $(CORBA_SRC_ZIP)" \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      | $(SHA256SUM) --check ; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      echo "ERROR: Bad download of CORBA zip"; false; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    fi; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  else \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    echo "ERROR: No up-to-date OpenJDK CORBA zip available"; exit -1; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	fi ;
	mkdir -p stamps
	touch $@

stamps/download-jaxp.stamp:
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_ALT_JAXP_SRC_ZIP_TRUE@@USE_HG_FALSE@	ln -sf $(ALT_JAXP_SRC_ZIP) $(JAXP_SRC_ZIP)
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	if ! echo "$(JAXP_SUM)  $(JAXP_SRC_ZIP)" \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  | $(JAXP_SHA256SUM_BIN) --check ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  if test "x$(enable_downloading)" = "xyes"; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    if [ $(JAXP_SRC_ZIP) ] ; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      mv $(JAXP_SRC_ZIP) $(JAXP_SRC_ZIP).old ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    $(WGET) $(ICEDTEA_URL)/$(JAXP_SRC_ZIP); \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    if ! echo "$(JAXP_SUM)  $(JAXP_SRC_ZIP)" \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      | $(SHA256SUM) --check ; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      echo "ERROR: Bad download of JAXP zip"; false; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    fi; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  else \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    echo "ERROR: No up-to-date JAXP root zip available"; exit -1; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	fi ;
	mkdir -p stamps
	touch $@

stamps/download-jaxws.stamp:
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_ALT_JAXWS_SRC_ZIP_TRUE@@USE_HG_FALSE@	ln -sf $(ALT_JAXWS_SRC_ZIP) $(JAXWS_SRC_ZIP)
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	if ! echo "$(JAXWS_SUM)  $(JAXWS_SRC_ZIP)" \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  | $(JAXWS_SHA256SUM_BIN) --check ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  if test "x$(enable_downloading)" = "xyes"; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    if [ $(JAXWS_SRC_ZIP) ] ; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      mv $(JAXWS_SRC_ZIP) $(JAXWS_SRC_ZIP).old ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    $(WGET) $(ICEDTEA_URL)/$(JAXWS_SRC_ZIP); \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    if ! echo "$(JAXWS_SUM)  $(JAXWS_SRC_ZIP)" \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      | $(SHA256SUM) --check ; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      echo "ERROR: Bad download of JAXWS zip"; false; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    fi; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  else \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    echo "ERROR: No up-to-date OpenJDK JAXWS zip available"; exit -1; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	fi ;
	mkdir -p stamps
	touch $@

stamps/download-jdk.stamp:
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_ALT_JDK_SRC_ZIP_TRUE@@USE_HG_FALSE@	ln -sf $(ALT_JDK_SRC_ZIP) $(JDK_SRC_ZIP)
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	if ! echo "$(JDK_SUM)  $(JDK_SRC_ZIP)" \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  | $(JDK_SHA256SUM_BIN) --check ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  if test "x$(enable_downloading)" = "xyes"; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    if [ $(JDK_SRC_ZIP) ] ; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      mv $(JDK_SRC_ZIP) $(JDK_SRC_ZIP).old ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    $(WGET) $(ICEDTEA_URL)/$(JDK_SRC_ZIP); \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    if ! echo "$(JDK_SUM)  $(JDK_SRC_ZIP)" \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      | $(SHA256SUM) --check ; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      echo "ERROR: Bad download of JDK zip"; false; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    fi; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  else \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    echo "ERROR: No up-to-date OpenJDK JDK zip available"; exit -1; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	fi ;
	mkdir -p stamps
	touch $@

stamps/download-langtools.stamp:
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_ALT_LANGTOOLS_SRC_ZIP_TRUE@@USE_HG_FALSE@	ln -sf $(ALT_LANGTOOLS_SRC_ZIP) $(LANGTOOLS_SRC_ZIP)
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	if ! echo "$(LANGTOOLS_SUM)  $(LANGTOOLS_SRC_ZIP)" \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  | $(LANGTOOLS_SHA256SUM_BIN) --check ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  if test "x$(enable_downloading)" = "xyes"; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    if [ $(LANGTOOLS_SRC_ZIP) ] ; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      mv $(LANGTOOLS_SRC_ZIP) $(LANGTOOLS_SRC_ZIP).old ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    $(WGET) $(ICEDTEA_URL)/$(LANGTOOLS_SRC_ZIP); \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    if ! echo "$(LANGTOOLS_SUM)  $(LANGTOOLS_SRC_ZIP)" \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      | $(SHA256SUM) --check ; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      echo "ERROR: Bad download of langtools zip"; false; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    fi; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  else \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    echo "ERROR: No up-to-date OpenJDK langtools zip available"; exit -1; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	fi ;
	mkdir -p stamps
	touch $@

clean-download-openjdk:
	if [ ! -z $(OPENJDK_SRC_ZIP) ] ; then \
	  rm -f $(OPENJDK_SRC_ZIP) ; \
	fi
	rm -f stamps/download-openjdk.stamp

clean-download-corba:
	if [ ! -z $(CORBA_SRC_ZIP) ] ; then \
	  rm -f $(CORBA_SRC_ZIP) ; \
	fi
	rm -f stamps/download-corba.stamp

clean-download-jaxp:
	if [ ! -z $(JAXP_SRC_ZIP) ] ; then \
	  rm -f $(JAXP_SRC_ZIP) ; \
	fi
	rm -f stamps/download-jaxp.stamp

clean-download-jaxws:
	if [ ! -z $(JAXWS_SRC_ZIP) ] ; then \
	  rm -f $(JAXWS_SRC_ZIP) ; \
	fi
	rm -f stamps/download-jaxws.stamp

clean-download-jdk:
	if [ ! -z $(JDK_SRC_ZIP) ] ; then \
	  rm -f $(JDK_SRC_ZIP) ; \
	fi
	rm -f stamps/download-jdk.stamp

clean-download-langtools:
	if [ ! -z $(LANGTOOLS_SRC_ZIP) ] ; then \
	  rm -f $(LANGTOOLS_SRC_ZIP) ; \
	fi
	rm -f stamps/download-langtools.stamp

stamps/download-cacao.stamp:
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_FALSE@@USE_ALT_CACAO_SRC_ZIP_TRUE@@USE_SYSTEM_CACAO_FALSE@	ln -sf $(ALT_CACAO_SRC_ZIP) $(CACAO_SRC_ZIP)
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_FALSE@@USE_SYSTEM_CACAO_FALSE@	if ! echo "$(CACAO_SUM)  $(CACAO_SRC_ZIP)" \
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_FALSE@@USE_SYSTEM_CACAO_FALSE@	 | $(CACAO_SHA256SUM_BIN) --check ; \
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_FALSE@@USE_SYSTEM_CACAO_FALSE@	then \
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_FALSE@@USE_SYSTEM_CACAO_FALSE@	 if test "x$(enable_downloading)" = "xyes"; then \
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_FALSE@@USE_SYSTEM_CACAO_FALSE@	   if [ -e $(CACAO_SRC_ZIP) ] ; then \
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_FALSE@@USE_SYSTEM_CACAO_FALSE@	     mv $(CACAO_SRC_ZIP) $(CACAO_SRC_ZIP).old ; \
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_FALSE@@USE_SYSTEM_CACAO_FALSE@	   fi ; \
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_FALSE@@USE_SYSTEM_CACAO_FALSE@	   $(WGET) $(CACAO_URL) -O $(CACAO_SRC_ZIP); \
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_FALSE@@USE_SYSTEM_CACAO_FALSE@	   if ! echo "$(CACAO_SUM)  $(CACAO_SRC_ZIP)" \
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_FALSE@@USE_SYSTEM_CACAO_FALSE@	     | $(SHA256SUM) --check ; then \
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_FALSE@@USE_SYSTEM_CACAO_FALSE@	     echo "ERROR: Bad download of CACAO zip"; false; \
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_FALSE@@USE_SYSTEM_CACAO_FALSE@	   fi; \
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_FALSE@@USE_SYSTEM_CACAO_FALSE@	 else \
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_FALSE@@USE_SYSTEM_CACAO_FALSE@	   echo "ERROR: No up-to-date CACAO zip available"; exit -1; \
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_FALSE@@USE_SYSTEM_CACAO_FALSE@	 fi ; \
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_FALSE@@USE_SYSTEM_CACAO_FALSE@	fi
	mkdir -p stamps
	touch $@

clean-download-cacao:
	rm -f $(CACAO_SRC_ZIP)
	rm -f stamps/download-cacao.stamp

stamps/download-jamvm.stamp:
@BUILD_JAMVM_TRUE@@USE_ALT_JAMVM_SRC_ZIP_TRUE@	ln -sf $(ALT_JAMVM_SRC_ZIP) $(JAMVM_SRC_ZIP)
@BUILD_JAMVM_TRUE@	if ! echo "$(JAMVM_SUM)  $(JAMVM_SRC_ZIP)" \
@BUILD_JAMVM_TRUE@	 | $(JAMVM_SHA256SUM_BIN) --check ; \
@BUILD_JAMVM_TRUE@	then \
@BUILD_JAMVM_TRUE@	  if test "x$(enable_downloading)" = "xyes"; then \
@BUILD_JAMVM_TRUE@	    if [ -e $(JAMVM_SRC_ZIP) ] ; then \
@BUILD_JAMVM_TRUE@	      mv $(JAMVM_SRC_ZIP) $(JAMVM_SRC_ZIP).old ; \
@BUILD_JAMVM_TRUE@	    fi ; \
@BUILD_JAMVM_TRUE@	    $(WGET) $(JAMVM_URL) -O $(JAMVM_SRC_ZIP); \
@BUILD_JAMVM_TRUE@	    if ! echo "$(JAMVM_SUM)  $(JAMVM_SRC_ZIP)" \
@BUILD_JAMVM_TRUE@	      | $(SHA256SUM) --check ; then \
@BUILD_JAMVM_TRUE@	      echo "ERROR: Bad download of JamVM zip"; false; \
@BUILD_JAMVM_TRUE@	    fi; \
@BUILD_JAMVM_TRUE@	  else \
@BUILD_JAMVM_TRUE@	    echo "ERROR: No up-to-date JamVM zip available"; exit -1; \
@BUILD_JAMVM_TRUE@	  fi ; \
@BUILD_JAMVM_TRUE@	fi
	mkdir -p stamps
	touch $@

clean-download-jamvm:
	rm -f $(JAMVM_SRC_ZIP)
	rm -f stamps/download-jamvm.stamp

stamps/download-nashorn.stamp: stamps/download-openjdk.stamp
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_TRUE@	$(HG) clone $(REV_ARG) $(ICEDTEA_HG_URL)/nashorn openjdk/nashorn
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_ALT_NASHORN_SRC_ZIP_TRUE@@USE_HG_FALSE@	ln -sf $(ALT_NASHORN_SRC_ZIP) $(NASHORN_SRC_ZIP)
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	if ! echo "$(NASHORN_SUM)  $(NASHORN_SRC_ZIP)" \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  | $(NASHORN_SHA256SUM_BIN) --check ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  if test "x$(enable_downloading)" = "xyes"; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    if [ -e $(NASHORN_SRC_ZIP) ] ; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      mv $(NASHORN_SRC_ZIP) $(NASHORN_SRC_ZIP).old ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    $(WGET) $(ICEDTEA_URL)/$(NASHORN_SRC_ZIP); \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    if ! echo "$(NASHORN_SUM)  $(NASHORN_SRC_ZIP)" \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      | $(SHA256SUM) --check ; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      echo "ERROR: Bad download of NASHORN zip"; false; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    fi; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  else \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    echo "ERROR: No up-to-date OpenJDK Nashorn zip available"; exit -1; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	fi
	mkdir -p stamps
	touch $@

clean-download-nashorn:
	if [ ! -z $(NASHORN_SRC_ZIP) ] ; then \
	  rm -f $(NASHORN_SRC_ZIP) ; \
	fi
	rm -f stamps/download-nashorn.stamp

stamps/download-hotspot.stamp:
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_ALT_HOTSPOT_SRC_ZIP_TRUE@@USE_HG_FALSE@	ln -sf $(ALT_HOTSPOT_SRC_ZIP) $(HOTSPOT_SRC_ZIP)
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	echo "Using HotSpot build: ${HSBUILD}"
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	if ! echo "$(HOTSPOT_SUM)  $(HOTSPOT_SRC_ZIP)" \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  | $(HOTSPOT_SHA256SUM_BIN) --check ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  if test "x$(enable_downloading)" = "xyes"; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    if [ -e $(HOTSPOT_SRC_ZIP) ] ; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      mv $(HOTSPOT_SRC_ZIP) $(HOTSPOT_SRC_ZIP).old ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    if test "x$(HS_TYPE)" = "xhg"; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      $(WGET) $(HS_URL)/archive/$(HS_CHANGESET).tar.gz -O $(HOTSPOT_SRC_ZIP) ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    else \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      $(WGET) $(HS_URL)/$(HOTSPOT_SRC_ZIP) ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@            fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    if ! echo "$(HOTSPOT_SUM)  $(HOTSPOT_SRC_ZIP)" \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      | $(SHA256SUM) --check ; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      echo "ERROR: Bad download of HotSpot zip"; false; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    fi; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  else \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    echo "ERROR: No up-to-date OpenJDK HotSpot zip available"; exit -1; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	fi
	mkdir -p stamps
	touch $@

clean-download-hotspot:
	if [ ! -z $(HOTSPOT_SRC_ZIP) ] ; then \
	  rm -f $(HOTSPOT_SRC_ZIP) ; \
	fi
	rm -f stamps/download-hotspot.stamp

stamps/extract.stamp: stamps/extract-openjdk.stamp stamps/extract-corba.stamp \
 stamps/extract-jaxp.stamp stamps/extract-jaxws.stamp stamps/extract-jdk.stamp \
 stamps/extract-cacao.stamp stamps/remove-intree-libraries.stamp \
 stamps/extract-langtools.stamp stamps/extract-jamvm.stamp \
 stamps/extract-hotspot.stamp stamps/sanitise-openjdk.stamp \
 stamps/extract-nashorn.stamp
	mkdir -p stamps
	touch $@

clean-extract: clean-extract-openjdk clean-extract-cacao clean-extract-jamvm
	rm -f stamps/extract.stamp

stamps/extract-openjdk.stamp: stamps/download-openjdk.stamp
@OPENJDK_SRC_DIR_FOUND_TRUE@	cp -pPR $(OPENJDK_SRC_DIR_LINK) $(OPENJDK_SRC_DIR) openjdk
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_TRUE@	$(HG) clone $(REV_ARG) $(ICEDTEA_HG_URL) openjdk;
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	set -e ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	if ! test -d openjdk ; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  if [ ! -z $(OPENJDK_SRC_ZIP) ] ; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    case "$(OPENJDK_SRC_ZIP)" in \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      *.zip) $(UNZIP) -q $(OPENJDK_SRC_ZIP) ;; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      *.tar.*) $(TAR) xf $(OPENJDK_SRC_ZIP) ;; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    esac; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    mv *-$(OPENJDK_CHANGESET) openjdk ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  else \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    echo "ERROR: Couldn't extract OpenJDK"; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    false; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  fi; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	fi; 
	touch $@

clean-extract-openjdk: clean-overlay clean-versioning \
 clean-patch-fsg clean-remove-intree-libraries \
 clean-sanitise-openjdk clean-extract-hotspot \
 clean-extract-jdk clean-extract-jaxp clean-extract-jaxws \
 clean-extract-corba clean-extract-langtools clean-extract-nashorn
	rm -rf openjdk
	rm -f stamps/extract-openjdk.stamp

stamps/extract-corba.stamp: stamps/extract-openjdk.stamp stamps/download-corba.stamp
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_TRUE@	$(HG) clone $(REV_ARG) $(ICEDTEA_HG_URL)/corba openjdk/corba
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	set -e ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	if [ ! -z $(CORBA_SRC_ZIP) ] ; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  if test -e ${CORBA_SRC_ZIP} ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    if ! test -d openjdk/corba ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      case "$(CORBA_SRC_ZIP)" in \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	        *.zip) $(UNZIP) -q $(CORBA_SRC_ZIP) ;; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	        *.tar.*) $(TAR) xf $(CORBA_SRC_ZIP) ;; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      esac; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      mv corba-$(CORBA_CHANGESET) openjdk/corba ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	fi
	touch $@

clean-extract-corba:
	rm -rf openjdk/corba
	rm -f stamps/extract-corba.stamp

stamps/extract-jaxp.stamp: stamps/extract-openjdk.stamp stamps/download-jaxp.stamp
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_TRUE@	$(HG) clone $(REV_ARG) $(ICEDTEA_HG_URL)/jaxp openjdk/jaxp
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	set -e ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	if [ ! -z $(JAXP_SRC_ZIP) ] ; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  if test -e ${JAXP_SRC_ZIP} ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    if ! test -d openjdk/jaxp ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      case "$(JAXP_SRC_ZIP)" in \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	        *.zip) $(UNZIP) -q $(JAXP_SRC_ZIP) ;; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	        *.tar.*) $(TAR) xf $(JAXP_SRC_ZIP) ;; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      esac; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      mv jaxp-$(JAXP_CHANGESET) openjdk/jaxp ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	fi
	touch $@

clean-extract-jaxp:
	rm -rf openjdk/jaxp
	rm -f stamps/extract-jaxp.stamp

stamps/extract-jaxws.stamp: stamps/extract-openjdk.stamp stamps/download-jaxws.stamp
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_TRUE@	$(HG) clone $(REV_ARG) $(ICEDTEA_HG_URL)/jaxws openjdk/jaxws
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	set -e ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	if [ ! -z $(JAXWS_SRC_ZIP) ] ; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  if test -e ${JAXWS_SRC_ZIP} ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    if ! test -d openjdk/jaxws ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      case "$(JAXWS_SRC_ZIP)" in \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	        *.zip) $(UNZIP) -q $(JAXWS_SRC_ZIP) ;; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	        *.tar.*) $(TAR) xf $(JAXWS_SRC_ZIP) ;; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      esac; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      mv jaxws-$(JAXWS_CHANGESET) openjdk/jaxws ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	fi
	touch $@

clean-extract-jaxws:
	rm -rf openjdk/jaxws
	rm -f stamps/extract-jaxws.stamp

stamps/extract-jdk.stamp: stamps/extract-openjdk.stamp stamps/download-jdk.stamp
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_TRUE@	$(HG) clone $(REV_ARG) $(ICEDTEA_HG_URL)/jdk openjdk/jdk
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	set -e ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	if [ ! -z $(JDK_SRC_ZIP) ] ; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  if test -e ${JDK_SRC_ZIP} ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    if ! test -d openjdk/jdk ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      case "$(JDK_SRC_ZIP)" in \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	        *.zip) $(UNZIP) -q $(JDK_SRC_ZIP) ;; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	        *.tar.*) $(TAR) xf $(JDK_SRC_ZIP) ;; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      esac; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      mv jdk-$(JDK_CHANGESET) openjdk/jdk ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	fi
	touch $@

clean-extract-jdk:
	rm -rf openjdk/jdk
	rm -f stamps/extract-jdk.stamp

stamps/extract-langtools.stamp: stamps/extract-openjdk.stamp stamps/download-langtools.stamp
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_TRUE@	$(HG) clone $(REV_ARG) $(ICEDTEA_HG_URL)/langtools openjdk/langtools
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	set -e ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	if [ ! -z $(LANGTOOLS_SRC_ZIP) ] ; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  if test -e ${LANGTOOLS_SRC_ZIP} ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    if ! test -d openjdk/langtools ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      case "$(LANGTOOLS_SRC_ZIP)" in \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	        *.zip) $(UNZIP) -q $(LANGTOOLS_SRC_ZIP) ;; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	        *.tar.*) $(TAR) xf $(LANGTOOLS_SRC_ZIP) ;; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      esac; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      mv langtools-$(LANGTOOLS_CHANGESET) openjdk/langtools ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	fi
	touch $@

clean-extract-langtools:
	rm -rf openjdk/langtools
	rm -f stamps/extract-langtools.stamp

stamps/extract-hotspot.stamp: stamps/extract-openjdk.stamp stamps/download-hotspot.stamp
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_TRUE@	$(HG) clone $(REV_ARG) $(HS_URL) openjdk/hotspot
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	set -e ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	if [ ! -z $(HOTSPOT_SRC_ZIP) ] ; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  if test -e ${HOTSPOT_SRC_ZIP} ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    case "$(HOTSPOT_SRC_ZIP)" in \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      *.zip) $(UNZIP) -q $(HOTSPOT_SRC_ZIP) ;; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      *.tar.*) $(TAR) xf $(HOTSPOT_SRC_ZIP) ;; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    esac; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    if test "x${HSBUILD}" != "xdefault"; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      rm -rf openjdk/hotspot ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    if ! test -d openjdk/hotspot ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      mv hotspot-$(HS_CHANGESET) openjdk/hotspot ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    else \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      rm -rf hotspot-$(HS_CHANGESET) ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	fi
	touch $@

clean-extract-hotspot:
	rm -rf openjdk/hotspot
	rm -f stamps/extract-hotspot.stamp

stamps/extract-nashorn.stamp: stamps/extract-openjdk.stamp stamps/download-nashorn.stamp
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_TRUE@	$(HG) clone $(REV_ARG) $(ICEDTEA_HG_URL)/nashorn openjdk/nashorn
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	set -e ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	if [ ! -z $(NASHORN_SRC_ZIP) ] ; then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  if test -e ${NASHORN_SRC_ZIP} ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    if ! test -d openjdk/nashorn ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    then \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      case "$(NASHORN_SRC_ZIP)" in \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	        *.zip) $(UNZIP) -q $(NASHORN_SRC_ZIP) ;; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	        *.tar.*) $(TAR) xf $(NASHORN_SRC_ZIP) ;; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      esac; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	      mv nashorn-$(NASHORN_CHANGESET) openjdk/nashorn ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	    fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	  fi ; \
@OPENJDK_SRC_DIR_FOUND_FALSE@@USE_HG_FALSE@	fi
	touch $@

clean-extract-nashorn:
	rm -rf openjdk/nashorn
	rm -f stamps/extract-nashorn.stamp

stamps/sanitise-openjdk.stamp: stamps/extract-openjdk.stamp \
 stamps/extract-hotspot.stamp stamps/extract-jdk.stamp \
 stamps/extract-langtools.stamp stamps/extract-corba.stamp \
 stamps/extract-jaxp.stamp stamps/extract-jaxws.stamp \
 stamps/extract-nashorn.stamp
	chmod -R ug+w openjdk 
	chmod +x $(builddir)/fsg.sh
	sh $(builddir)/fsg.sh
	touch stamps/sanitise-openjdk.stamp

clean-sanitise-openjdk:
	rm -f stamps/sanitise-openjdk.stamp

stamps/extract-cacao.stamp: stamps/download-cacao.stamp
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_TRUE@@USE_SYSTEM_CACAO_FALSE@	if ! test -d cacao ; \
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_TRUE@@USE_SYSTEM_CACAO_FALSE@	then \
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_TRUE@@USE_SYSTEM_CACAO_FALSE@	  mkdir -p cacao/cacao ; \
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_TRUE@@USE_SYSTEM_CACAO_FALSE@	  cp -r $(ALT_CACAO_SRC_DIR)/* cacao/cacao/ ; \
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_TRUE@@USE_SYSTEM_CACAO_FALSE@	fi
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_FALSE@@USE_SYSTEM_CACAO_FALSE@	set -e ; \
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_FALSE@@USE_SYSTEM_CACAO_FALSE@	if ! test -d cacao/cacao ; \
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_FALSE@@USE_SYSTEM_CACAO_FALSE@	then \
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_FALSE@@USE_SYSTEM_CACAO_FALSE@	  mkdir cacao ; \
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_FALSE@@USE_SYSTEM_CACAO_FALSE@	  $(TAR) xf $(CACAO_SRC_ZIP) -C cacao ; \
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_FALSE@@USE_SYSTEM_CACAO_FALSE@	  dir=$$(basename cacao/gnu*) ; \
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_FALSE@@USE_SYSTEM_CACAO_FALSE@	  mv -v cacao/$$dir cacao/cacao ; \
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_FALSE@@USE_SYSTEM_CACAO_FALSE@	  ln -s cacao cacao/$$dir ; \
@BUILD_CACAO_TRUE@@USE_ALT_CACAO_SRC_DIR_FALSE@@USE_SYSTEM_CACAO_FALSE@	fi
	mkdir -p stamps
	touch $@

clean-extract-cacao: clean-cacao
	rm -rf cacao
	rm -f stamps/extract-cacao.stamp

stamps/extract-jamvm.stamp: stamps/download-jamvm.stamp
@BUILD_JAMVM_TRUE@	set -e ; \
@BUILD_JAMVM_TRUE@	if ! test -d jamvm ; \
@BUILD_JAMVM_TRUE@	then \
@BUILD_JAMVM_TRUE@	  mkdir jamvm ; \
@BUILD_JAMVM_TRUE@	  $(TAR) xzf $(JAMVM_SRC_ZIP) -C jamvm ; \
@BUILD_JAMVM_TRUE@	  dir=$$(basename jamvm/jamvm-*) ; \
@BUILD_JAMVM_TRUE@	  mv -v jamvm/$$dir jamvm/jamvm ; \
@BUILD_JAMVM_TRUE@	  ln -s jamvm jamvm/$$dir ; \
@BUILD_JAMVM_TRUE@	fi
	mkdir -p stamps
	touch stamps/extract-jamvm.stamp

clean-extract-jamvm: clean-jamvm
	rm -f stamps/extract-jamvm.stamp

stamps/remove-intree-libraries.stamp: stamps/sanitise-openjdk.stamp
	sh $(abs_top_builddir)/remove-intree-libraries.sh
	touch stamps/remove-intree-libraries.stamp

clean-remove-intree-libraries:
	rm -f stamps/remove-intree-libraries.stamp

stamps/patch-fsg.stamp: stamps/extract.stamp
	mkdir -p stamps ; \
	rm -f stamps/patch-fsg.stamp.tmp ; \
	touch stamps/patch-fsg.stamp.tmp ; \
	all_patches_ok=yes; \
	for p in $(ICEDTEA_FSG_PATCHES) ; \
	do \
	  if test x$${all_patches_ok} = "xyes" \
	    && echo Checking $$p \
	    && $(PATCH) -l -p0 --dry-run -s -t -f \
	      -F 0 < $(abs_top_srcdir)/$$p ; \
	  then \
	    echo Applying $$p ; \
	    $(PATCH) -l -p0 < $(abs_top_srcdir)/$$p ; \
	    if ! grep "^\* $$(basename $$p)" $(abs_top_srcdir)/HACKING \
	      >> stamps/patch-fsg.stamp.tmp ; \
	    then \
	      echo "* $$(basename $$p): UNDOCUMENTED" \
	        >> stamps/patch-fsg.stamp.tmp ; \
	    fi ; \
	  else \
	    test x$${all_patches_ok} = "xyes" && all_patches_ok=$$p ; \
	  fi ; \
	done ; \
	mv stamps/patch-fsg.stamp.tmp stamps/patch-fsg.stamp ; \
	if ! test x$${all_patches_ok} = "xyes"; then \
	  echo ERROR patch $${all_patches_ok} FAILED! ; \
	  echo WARNING make clean-patch before retrying a fix ; \
	  exit 2; \
	fi ; 

clean-patch-fsg: clean-patch
	if [ -e stamps/patch-fsg.stamp ] ; then \
	  all_patches_ok=yes; \
	  for p in $(ICEDTEA_FSG_PATCHES) ; \
	  do \
	    echo Checking $$p ; \
	    if $(PATCH) -l -p0 -R --dry-run -s -t -f < $(abs_top_srcdir)/$$p ; \
	    then \
	      echo Reverting $$p ; \
	      $(PATCH) -l -p0 -R < $(abs_top_srcdir)/$$p ; \
	    else \
	      all_patches_ok=no ; \
	    fi ; \
	  done ; \
	  if ! test x$${all_patches_ok} = "xyes" ; then \
	    echo "WARNING Not all patches reverted cleanly" ; \
	  fi ; \
	  rm -f stamps/patch-fsg.stamp ; \
	fi

stamps/patch.stamp: stamps/patch-fsg.stamp
	mkdir -p stamps ; \
	rm -f stamps/patch.stamp.tmp ; \
	touch stamps/patch.stamp.tmp ; \
	all_patches_ok=yes; \
	cd $(abs_top_builddir)/openjdk/jdk; \
	for p in $(OPENJDK_PATCHES) ; \
	do \
	  if test x$${all_patches_ok} == "xyes" \
	     && echo Checking $$p \
	     && $(PATCH) -l -p1 --dry-run -s -t -f -F 0 < $(abs_top_srcdir)/$$p ; \
	  then \
	    echo Applying $$p ; \
	    $(PATCH) -l -p1 < $(abs_top_srcdir)/$$p ; \
	  else \
	    test x$${all_patches_ok} == "xyes" && all_patches_ok=$$p ; \
	  fi ; \
	done ; \
	cd $(abs_top_builddir) ; \
	for p in $(ICEDTEA_PATCHES) ; \
	do \
	  if test x$${all_patches_ok} = "xyes" \
	    && echo Checking $$p \
	    && $(PATCH) -l -p0 --dry-run -s -t -f \
	      -F 0 < $(abs_top_srcdir)/$$p ; \
	  then \
	    echo Applying $$p ; \
	    $(PATCH) -l -p0 < $(abs_top_srcdir)/$$p ; \
	    if ! grep "^\* $$(basename $$p)" $(abs_top_srcdir)/HACKING \
	      >> stamps/patch.stamp.tmp ; \
	    then \
	      echo "* $$(basename $$p): UNDOCUMENTED" \
	        >> stamps/patch.stamp.tmp ; \
	    fi ; \
	  else \
	    test x$${all_patches_ok} = "xyes" && all_patches_ok=$$p ; \
	  fi ; \
	done ; \
	if ! test x$${all_patches_ok} = "xyes"; then \
	  echo ERROR patch $${all_patches_ok} FAILED! ; \
	  echo WARNING make clean-patch before retrying a fix ; \
	  exit 2; \
	fi ; \
	mv stamps/patch.stamp.tmp stamps/patch.stamp 

clean-patch:
	if [ -e stamps/patch.stamp ] ; then \
	  all_patches_ok=yes; \
	  for p in $(ICEDTEA_PATCHES) ; \
	  do \
	    echo Checking $$p ; \
	    if $(PATCH) -l -p0 -R --dry-run -s -t -f < $(abs_top_srcdir)/$$p ; \
	    then \
	      echo Reverting $$p ; \
	      $(PATCH) -l -p0 -R < $(abs_top_srcdir)/$$p ; \
	    else \
	      all_patches_ok=no ; \
	    fi ; \
	  done ; \
	  cd $(abs_top_builddir)/openjdk/jdk; \
	  for p in $(OPENJDK_PATCHES) ; \
	  do \
	    echo Checking $$p ; \
	    if $(PATCH) -l -p1 -R --dry-run -s -t -f < $(abs_top_srcdir)/$$p ; \
	    then \
	      echo Reverting $$p ; \
	      $(PATCH) -l -p1 -R < $(abs_top_srcdir)/$$p ; \
	    else \
	      all_patches_ok=no ; \
	    fi ; \
	  done ; \
	  cd $(abs_top_builddir) ; \
	  if ! test x$${all_patches_ok} = "xyes" ; then \
	    echo "WARNING Not all patches reverted cleanly" ; \
	  fi ; \
	  rm -f stamps/patch.stamp ; \
	fi

stamps/versioning.stamp: stamps/patch.stamp
	mv $(VERSION_SETTINGS_FILE) $(VERSION_SETTINGS_FILE_BACKUP)
	cat $(VERSION_SETTINGS_FILE_BACKUP) > $(VERSION_SETTINGS_FILE)
	icedtea_version="$(PACKAGE_VERSION)$(ICEDTEA_REV)" ; \
	if test "x$(ENABLE_CACAO)" = "xyes" || \
	   test "x$(ENABLE_JAMVM)" = "xyes"; then \
	  echo "JDK_DERIVATIVE_NAME=$${icedtea_version}" \
	    >>$(VERSION_SETTINGS_FILE) ; \
	  echo "PRODUCT_NAME=$(ICEDTEA_NAME)" \
	    >>$(VERSION_SETTINGS_FILE) ; \
	else \
	  echo "JDK_DERIVATIVE_NAME=$(ICEDTEA_NAME) $${icedtea_version}" \
	    >>$(VERSION_SETTINGS_FILE) ; \
	fi ; 

@HAS_JDK_REVISION_TRUE@	echo "JDK_REVID=$(JDK_REVISION)" >>$(VERSION_SETTINGS_FILE) ;

	echo "DISTRO_NAME=$(DIST_NAME)" >>$(VERSION_SETTINGS_FILE) ;
@HAS_PKGVERSION_TRUE@	  echo "DISTRO_PACKAGE_VERSION=$(PKGVERSION)" \
@HAS_PKGVERSION_TRUE@	    >>$(VERSION_SETTINGS_FILE) ;
	if test x"$(PROJECT_NAME)" != "xjdk8"; then \
	  proj_suffix="-$(PROJECT_NAME)"; \
	fi ; \
	if test x"$(VERSION_SUFFIX)" != "x"; then \
	  ver_suffix="-$(VERSION_SUFFIX)"; \
	fi ; \
	$(SED) -i "s#BUILD_VARIANT_RELEASE)#BUILD_VARIANT_RELEASE)$${proj_suffix}$${ver_suffix}#" \
	  $(VERSION_SETTINGS_FILE);
	mkdir -p stamps
	touch $@

clean-versioning:
	if [ -e $(VERSION_SETTINGS_FILE_BACKUP) ] ; then \
	  mv $(VERSION_SETTINGS_FILE_BACKUP) $(VERSION_SETTINGS_FILE) ; \
	fi
	rm -f stamps/versioning.stamp

stamps/overlay.stamp: stamps/versioning.stamp
	cp -r $(abs_top_srcdir)/overlays/openjdk/* openjdk/
	chmod -R ug+w openjdk
	mkdir -p stamps
	touch $@

clean-overlay:
	rm -f stamps/overlay.stamp

# OpenJDK boot Source Preparation Targets
# ======================================

# Copy over OpenJDK sources for bootstrap.
stamps/clone-boot.stamp: $(OPENJDK_TREE)
	if ! test -d openjdk-boot ; then \
	    cp -pPRl openjdk openjdk-boot ; \
	    if [ -e $(BUILD_OUTPUT_DIR) ] ; then \
	      cp -pPRl $(BUILD_OUTPUT_DIR) $(BOOT_BUILD_OUTPUT_DIR) ; \
	    fi ; \
	fi
	mkdir -p stamps
	touch $@

clean-clone-boot: 
	rm -rf openjdk-boot
	rm -f stamps/patch-boot.stamp
	rm -f stamps/clone-boot.stamp

stamps/patch-boot.stamp: stamps/clone-boot.stamp
	mkdir -p stamps; \
	rm -f stamps/patch-boot.stamp.tmp ; \
	touch stamps/patch-boot.stamp.tmp ; \
	all_patches_ok=yes; \
	for p in $(ICEDTEA_BOOT_PATCHES) ; \
	do \
	  if test x$${all_patches_ok} = "xyes" \
	    && echo Checking $$p \
	    && $(PATCH) -l -p0 --dry-run -s -t -f \
	      -F 0 < $(abs_top_srcdir)/$$p ; \
	  then \
	    echo Applying $$p ; \
	    $(PATCH) -l -p0 < $(abs_top_srcdir)/$$p ; \
	    if ! grep "^\* $$(basename $$p)" $(abs_top_srcdir)/HACKING \
	      >> stamps/patch-boot.stamp.tmp ; \
	    then \
	      echo "* $$(basename $$p): UNDOCUMENTED" \
	        >> stamps/patch-boot.stamp.tmp ; \
	    fi ; \
	  else \
	    test x$${all_patches_ok} = "xyes" && all_patches_ok=$$p ; \
	  fi ; \
	done ; \
	mv stamps/patch-boot.stamp.tmp stamps/patch-boot.stamp ; \
	if ! test x$${all_patches_ok} = "xyes"; then \
	  echo ERROR patch $${all_patches_ok} FAILED! ; \
	  echo WARNING make clean-patch before retrying a fix ; \
	  exit 2; \
	fi

clean-patch-boot:
	if [ -e stamps/patch-boot.stamp ] ; then \
	  all_patches_ok=yes; \
	  for p in $(ICEDTEA_BOOT_PATCHES) ; \
	  do \
	    echo Checking $$p ; \
	    if $(PATCH) -l -p0 -R --dry-run -s -t -f < $(abs_top_srcdir)/$$p ; \
	    then \
	      echo Reverting $$p ; \
	      $(PATCH) -l -p0 -R < $(abs_top_srcdir)/$$p ; \
	    else \
	      all_patches_ok=no ; \
	    fi ; \
	  done ; \
	  if ! test x$${all_patches_ok} = "xyes" ; then \
	    echo "WARNING Not all patches reverted cleanly" ; \
	  fi ; \
	  rm -f stamps/patch-boot.stamp ; \
	fi

# Bootstrap Directory Targets
# ===========================

# bootstrap/stage1
stamps/bootstrap-directory-stage1.stamp:
	mkdir -p $(STAGE1_BOOT_DIR)/bin stamps/
	ln -sf $(JAVA) $(STAGE1_BOOT_DIR)/bin/java
	ln -sf ../../../javah $(STAGE1_BOOT_DIR)/bin/javah
	ln -sf $(RMIC) $(STAGE1_BOOT_DIR)/bin/rmic
	ln -sf $(JAR) $(STAGE1_BOOT_DIR)/bin/jar
	ln -sf $(NATIVE2ASCII) $(STAGE1_BOOT_DIR)/bin/native2ascii
	ln -sf ../../../javac $(STAGE1_BOOT_DIR)/bin/javac
	ln -sf ../../../javap $(STAGE1_BOOT_DIR)/bin/javap
	mkdir -p $(STAGE1_BOOT_DIR)/lib/modules
	mkdir -p $(STAGE1_BOOT_DIR)/jre/lib && \
	cp $(SYSTEM_JDK_DIR)/jre/lib/rt.jar \
	  $(STAGE1_BOOT_DIR)/jre/lib/rt.jar && \
	chmod u+w $(STAGE1_BOOT_DIR)/jre/lib/rt.jar
	mkdir -p $(STAGE1_BOOT_DIR)/lib && \
	if [ -e $(SYSTEM_JDK_DIR)/lib/tools.jar ] ; then \
	  ln -sf $(SYSTEM_JDK_DIR)/lib/tools.jar $(STAGE1_BOOT_DIR)/lib/tools.jar ; \
	else \
	  ln -sf $(STAGE1_BOOT_DIR)/jre/lib/rt.jar $(STAGE1_BOOT_DIR)/lib/tools.jar ; \
	fi
	ln -sf $(SYSTEM_JDK_DIR)/jre/lib/$(JRE_ARCH_DIR) \
	  $(STAGE1_BOOT_DIR)/jre/lib/ && \
	if ! test -d $(STAGE1_BOOT_DIR)/jre/lib/$(INSTALL_ARCH_DIR); \
	  then \
	  ln -sf ./$(JRE_ARCH_DIR) \
	    $(STAGE1_BOOT_DIR)/jre/lib/$(INSTALL_ARCH_DIR); \
	fi
	mkdir -p $(STAGE1_BOOT_DIR)/include && \
	for i in $(SYSTEM_JDK_DIR)/include/*; do \
	  test -r $$i | continue; \
	  i=`basename $$i`; \
	  rm -f $(STAGE1_BOOT_DIR)/include/$$i; \
	  ln -s $(SYSTEM_JDK_DIR)/include/$$i $(STAGE1_BOOT_DIR)/include/$$i; \
	done;
	mkdir -p stamps
	touch $@

clean-bootstrap-directory-stage1:
	rm -rf $(STAGE1_BOOT_DIR)
	rm -f stamps/bootstrap-directory-stage1.stamp

# bootstrap/stage2.
stamps/bootstrap-directory-stage2.stamp: stamps/icedtea-stage1.stamp
	rm -rf $(STAGE2_BOOT_DIR)
	ln -s $(BUILD_BOOT_SDK_DIR)/ $(STAGE2_BOOT_DIR)
	if ! test -d $(STAGE2_BOOT_DIR)/include; then \
	  ln -sf $(BOOT_BUILD_OUTPUT_DIR)/include $(STAGE2_BOOT_DIR)/include; \
	fi
	mkdir -p stamps
	touch $@

clean-bootstrap-directory-stage2:
	rm -rf $(STAGE2_BOOT_DIR)
	rm -f stamps/bootstrap-directory-stage2.stamp

# stage 1 symlink.
stamps/bootstrap-directory-symlink-stage1.stamp: stamps/bootstrap-directory-stage1.stamp
	rm -f $(BOOT_DIR)
	ln -sf $(STAGE1_BOOT_DIR) $(BOOT_DIR)
	mkdir -p stamps
	touch $@

clean-bootstrap-directory-symlink-stage1:
	rm -f $(BOOT_DIR)
	rm -f stamps/bootstrap-directory-symlink-stage1.stamp

# stage 2 symlink.
stamps/bootstrap-directory-symlink-stage2.stamp: $(BOOTSTRAP_DIRECTORY_STAMP)
	mkdir -p bootstrap
	rm -f $(BOOT_DIR)
	ln -sf $(ICEDTEA_HOME) $(BOOT_DIR); \
	if ! $(BOOT_DIR)/bin/java -version ; \
         then \
           echo "$(BOOT_DIR)/bin/java" \
               "cannot be found or is corrupted." ; \
           exit 1; \
        fi
	mkdir -p stamps
	touch $@

clean-bootstrap-directory-symlink-stage2:
	rm -f $(BOOT_DIR)
	rm -f stamps/bootstrap-directory-symlink-stage2.stamp

# OpenJDK Targets
# ===============

# If you change anything here in the icedtea target, please make sure
# you change it in the icedtea-debug target as well.
stamps/icedtea-configure.stamp: stamps/bootstrap-directory-symlink-stage2.stamp \
 stamps/download.stamp stamps/extract.stamp $(OPENJDK_TREE) \
 stamps/cacao.stamp stamps/jamvm.stamp
	mkdir -p $(BUILD_OUTPUT_DIR)
	cd $(BUILD_OUTPUT_DIR) && \
	$(SHELL) $(abs_top_builddir)/openjdk/configure $(ICEDTEA_CONFIGURE)
	mkdir -p stamps
	touch $@

stamps/icedtea.stamp: stamps/icedtea-configure.stamp
	$(ICEDTEA_UNSET) $(ARCH_PREFIX) $(ICEDTEA_MAKE) \
	  $(ICEDTEA_ENV) \
	  -C $(BUILD_OUTPUT_DIR) \
	  $(ICEDTEA_BUILD_TARGET)
	$(abs_top_builddir)/pax-mark-vm $(BUILD_SDK_DIR) true
	mkdir -p $(BUILD_SDK_DIR)/jre/lib/$(INSTALL_ARCH_DIR)
	mkdir -p $(BUILD_JRE_DIR)/lib/$(INSTALL_ARCH_DIR)
	mkdir -p $(BUILD_SDK_DIR)/jre/lib/ext
	mkdir -p $(BUILD_JRE_DIR)/lib/ext 
@ZERO_BUILD_TRUE@	printf -- '-zero ALIASED_TO -server\n' >> $(BUILD_JRE_ARCH_DIR)/jvm.cfg
@SHARK_BUILD_TRUE@	printf -- '-shark ALIASED_TO -server\n' >> $(BUILD_JRE_ARCH_DIR)/jvm.cfg
@ENABLE_CACAO_TRUE@	printf -- '-cacao ALIASED_TO -server\n' >> $(BUILD_JRE_ARCH_DIR)/jvm.cfg
@ENABLE_SYSTEMTAP_TRUE@	mkdir -p $(BUILD_SDK_DIR)/tapset ; \
@ENABLE_SYSTEMTAP_TRUE@	grep "client IGNORE" $(BUILD_JRE_ARCH_DIR)/jvm.cfg; \
@ENABLE_SYSTEMTAP_TRUE@	if test $$? -eq 0; then \
@ENABLE_SYSTEMTAP_TRUE@	  $(SED) -e '/\/client\/libjvm.so/d' \
@ENABLE_SYSTEMTAP_TRUE@	    < $(abs_top_builddir)/tapset/hotspot.stp \
@ENABLE_SYSTEMTAP_TRUE@	    > $(BUILD_SDK_DIR)/tapset/hotspot.stp; \
@ENABLE_SYSTEMTAP_TRUE@	  $(SED) -e '/\/client\/libjvm.so/d' \
@ENABLE_SYSTEMTAP_TRUE@	    < $(abs_top_builddir)/tapset/hotspot_jni.stp \
@ENABLE_SYSTEMTAP_TRUE@	    > $(BUILD_SDK_DIR)/tapset/hotspot_jni.stp; \
@ENABLE_SYSTEMTAP_TRUE@	  $(SED) -e '/\/client\/libjvm.so/d' \
@ENABLE_SYSTEMTAP_TRUE@	    < $(abs_top_builddir)/tapset/hotspot_gc.stp \
@ENABLE_SYSTEMTAP_TRUE@	    > $(BUILD_SDK_DIR)/tapset/hotspot_gc.stp; \
@ENABLE_SYSTEMTAP_TRUE@	else \
@ENABLE_SYSTEMTAP_TRUE@	  cp $(abs_top_builddir)/tapset/hotspot.stp \
@ENABLE_SYSTEMTAP_TRUE@	    $(BUILD_SDK_DIR)/tapset/hotspot.stp; \
@ENABLE_SYSTEMTAP_TRUE@	  cp $(abs_top_builddir)/tapset/hotspot_jni.stp \
@ENABLE_SYSTEMTAP_TRUE@	    $(BUILD_SDK_DIR)/tapset/hotspot_jni.stp; \
@ENABLE_SYSTEMTAP_TRUE@	  cp $(abs_top_builddir)/tapset/hotspot_gc.stp \
@ENABLE_SYSTEMTAP_TRUE@	    $(BUILD_SDK_DIR)/tapset/hotspot_gc.stp; \
@ENABLE_SYSTEMTAP_TRUE@	fi; \
@ENABLE_SYSTEMTAP_TRUE@	cp $(abs_top_builddir)/tapset/jstack.stp \
@ENABLE_SYSTEMTAP_TRUE@	  $(BUILD_SDK_DIR)/tapset/jstack.stp
	cp $(abs_top_builddir)/nss.cfg \
	  $(BUILD_SDK_DIR)/jre/lib/security;
@ENABLE_JAMVM_TRUE@	printf -- '-jamvm ALIASED_TO -server\n' >> $(BUILD_JRE_ARCH_DIR)/jvm.cfg
	@echo "IcedTea is served:" $(BUILD_SDK_DIR)
	mkdir -p stamps
	touch $@

stamps/icedtea-debug-configure.stamp: stamps/bootstrap-directory-symlink-stage2.stamp \
 stamps/download.stamp stamps/extract.stamp $(OPENJDK_TREE) \
 stamps/cacao.stamp stamps/jamvm.stamp
	mkdir -p $(DEBUG_BUILD_OUTPUT_DIR)
	cd $(DEBUG_BUILD_OUTPUT_DIR) && \
	$(SHELL) $(abs_top_builddir)/openjdk/configure $(ICEDTEA_CONFIGURE) \
	  --with-debug-level=slowdebug
	mkdir -p stamps
	touch $@

stamps/icedtea-debug.stamp: stamps/icedtea-debug-configure.stamp
	$(ICEDTEA_UNSET) $(ARCH_PREFIX) $(ICEDTEA_MAKE) \
	  $(ICEDTEA_ENV) \
	  -C $(DEBUG_BUILD_OUTPUT_DIR) \
	  $(ICEDTEA_BUILD_TARGET)
	$(abs_top_builddir)/pax-mark-vm $(BUILD_DEBUG_SDK_DIR) true
	mkdir -p $(BUILD_DEBUG_SDK_DIR)/jre/lib/$(INSTALL_ARCH_DIR)
	mkdir -p $(BUILD_DEBUG_JRE_DIR)/lib/$(INSTALL_ARCH_DIR)
	mkdir -p $(BUILD_DEBUG_SDK_DIR)/jre/lib/ext
	mkdir -p $(BUILD_DEBUG_JRE_DIR)/lib/ext 
@ZERO_BUILD_TRUE@	printf -- '-zero ALIASED_TO -server\n' >> $(BUILD_DEBUG_JRE_ARCH_DIR)/jvm.cfg
@SHARK_BUILD_TRUE@	printf -- '-shark ALIASED_TO -server\n' >> $(BUILD_DEBUG_JRE_ARCH_DIR)/jvm.cfg
@ENABLE_CACAO_TRUE@	printf -- '-cacao ALIASED_TO -server\n' >> $(BUILD_DEBUG_JRE_ARCH_DIR)/jvm.cfg
@ENABLE_SYSTEMTAP_TRUE@	mkdir -p $(BUILD_DEBUG_SDK_DIR)/tapset ; \
@ENABLE_SYSTEMTAP_TRUE@	grep "client IGNORE" $(BUILD_JRE_ARCH_DIR)/jvm.cfg; \
@ENABLE_SYSTEMTAP_TRUE@	if test $$? -eq 0; then \
@ENABLE_SYSTEMTAP_TRUE@	  $(SED) -e '/\/client\/libjvm.so/d' \
@ENABLE_SYSTEMTAP_TRUE@	    < $(abs_top_builddir)/tapset/hotspot.stp \
@ENABLE_SYSTEMTAP_TRUE@	    > $(BUILD_DEBUG_SDK_DIR)/tapset/hotspot.stp; \
@ENABLE_SYSTEMTAP_TRUE@	  $(SED) -e '/\/client\/libjvm.so/d' \
@ENABLE_SYSTEMTAP_TRUE@	    < $(abs_top_builddir)/tapset/hotspot_jni.stp \
@ENABLE_SYSTEMTAP_TRUE@	    > $(BUILD_DEBUG_SDK_DIR)/tapset/hotspot_jni.stp; \
@ENABLE_SYSTEMTAP_TRUE@	  $(SED) -e '/\/client\/libjvm.so/d' \
@ENABLE_SYSTEMTAP_TRUE@	    < $(abs_top_builddir)/tapset/hotspot_gc.stp \
@ENABLE_SYSTEMTAP_TRUE@	    > $(BUILD_DEBUG_SDK_DIR)/tapset/hotspot_gc.stp; \
@ENABLE_SYSTEMTAP_TRUE@	else \
@ENABLE_SYSTEMTAP_TRUE@	  cp $(abs_top_builddir)/tapset/hotspot.stp \
@ENABLE_SYSTEMTAP_TRUE@	    $(BUILD_DEBUG_SDK_DIR)/tapset/hotspot.stp; \
@ENABLE_SYSTEMTAP_TRUE@	  cp $(abs_top_builddir)/tapset/hotspot_jni.stp \
@ENABLE_SYSTEMTAP_TRUE@	    $(BUILD_DEBUG_SDK_DIR)/tapset/hotspot_jni.stp; \
@ENABLE_SYSTEMTAP_TRUE@	  cp $(abs_top_builddir)/tapset/hotspot_gc.stp \
@ENABLE_SYSTEMTAP_TRUE@	    $(BUILD_DEBUG_SDK_DIR)/tapset/hotspot_gc.stp; \
@ENABLE_SYSTEMTAP_TRUE@	fi; \
@ENABLE_SYSTEMTAP_TRUE@	cp $(abs_top_builddir)/tapset/jstack.stp \
@ENABLE_SYSTEMTAP_TRUE@	  $(BUILD_DEBUG_SDK_DIR)/tapset/jstack.stp
	cp $(abs_top_builddir)/nss.cfg \
	  $(BUILD_DEBUG_SDK_DIR)/jre/lib/security;
@ENABLE_JAMVM_TRUE@	printf -- '-jamvm ALIASED_TO -server\n' >> $(BUILD_DEBUG_JRE_ARCH_DIR)/jvm.cfg
	@echo "IcedTea (debug build) is served:" $(BUILD_DEBUG_SDK_DIR)
	mkdir -p stamps
	touch $@

clean-icedtea: 
	rm -rf $(BUILD_OUTPUT_DIR)
	rm -f stamps/icedtea-configure.stamp stamps/icedtea.stamp

clean-icedtea-debug:
	rm -rf $(DEBUG_BUILD_OUTPUT_DIR)
	rm -f stamps/icedtea-debug-configure.stamp
	rm -f stamps/icedtea-debug.stamp

stamps/check-crypto.stamp: stamps/cryptocheck.stamp stamps/icedtea.stamp
	if [ -e $(BUILD_SDK_DIR)/bin/java ] ; then \
	  $(BUILD_SDK_DIR)/bin/java -cp $(CRYPTO_CHECK_BUILD_DIR) TestCryptoLevel ; \
	fi
	mkdir -p stamps
	touch $@

clean-check-crypto:
	rm -f stamps/check-crypto.stamp

stamps/add-archive.stamp: stamps/icedtea.stamp
@ENABLE_CACAO_FALSE@@ENABLE_JAMVM_FALSE@@ZERO_BUILD_FALSE@	if [ -e $(BUILD_SDK_DIR)/bin/java ] ; then \
@ENABLE_CACAO_FALSE@@ENABLE_JAMVM_FALSE@@ZERO_BUILD_FALSE@	  if test "x$(INSTALL_ARCH_DIR)" != "xppc64" -a "x$(INSTALL_ARCH_DIR)" != "xppc64le" ; then \
@ENABLE_CACAO_FALSE@@ENABLE_JAMVM_FALSE@@ZERO_BUILD_FALSE@	    $(BUILD_SDK_DIR)/bin/java -Xshare:dump ; \
@ENABLE_CACAO_FALSE@@ENABLE_JAMVM_FALSE@@ZERO_BUILD_FALSE@	  fi ; \
@ENABLE_CACAO_FALSE@@ENABLE_JAMVM_FALSE@@ZERO_BUILD_FALSE@	fi
	touch stamps/add-archive.stamp

clean-add-archive:
	rm -vf $(BUILD_SDK_DIR)/jre/lib/$(INSTALL_ARCH_DIR)/*/*.jsa
	rm -f stamps/add-archive.stamp

stamps/check-crypto-debug.stamp: stamps/cryptocheck.stamp stamps/icedtea-debug.stamp
	if [ -e $(BUILD_DEBUG_SDK_DIR)/bin/java ] ; then \
	  $(BUILD_DEBUG_SDK_DIR)/bin/java -cp $(CRYPTO_CHECK_BUILD_DIR) TestCryptoLevel ; \
	fi
	mkdir -p stamps
	touch $@

clean-check-crypto-debug:
	rm -f stamps/check-crypto-debug.stamp

stamps/add-archive-debug.stamp: stamps/icedtea-debug.stamp
@ENABLE_CACAO_FALSE@@ENABLE_JAMVM_FALSE@@ZERO_BUILD_FALSE@	if [ -e $(BUILD_DEBUG_SDK_DIR)/bin/java ] ; then \
@ENABLE_CACAO_FALSE@@ENABLE_JAMVM_FALSE@@ZERO_BUILD_FALSE@	  if test "x$(INSTALL_ARCH_DIR)" != "xppc64" -a "x$(INSTALL_ARCH_DIR)" != "xppc64le" ; then \
@ENABLE_CACAO_FALSE@@ENABLE_JAMVM_FALSE@@ZERO_BUILD_FALSE@	    $(BUILD_DEBUG_SDK_DIR)/bin/java -Xshare:dump ; \
@ENABLE_CACAO_FALSE@@ENABLE_JAMVM_FALSE@@ZERO_BUILD_FALSE@	  fi ; \
@ENABLE_CACAO_FALSE@@ENABLE_JAMVM_FALSE@@ZERO_BUILD_FALSE@	fi
	touch stamps/add-archive-debug.stamp

clean-add-archive-debug:
	rm -vf $(BUILD_DEBUG_SDK_DIR)/jre/lib/$(INSTALL_ARCH_DIR)/*/*.jsa
	rm -f stamps/add-archive-debug.stamp

stamps/icedtea-stage2.stamp: stamps/icedtea.stamp stamps/add-cacao.stamp \
 stamps/add-zero.stamp stamps/add-jamvm.stamp stamps/check-crypto.stamp \
 stamps/add-archive.stamp
	mkdir -p stamps
	touch $@

clean-icedtea-stage2: clean-add-jamvm clean-check-crypto clean-add-archive
	rm -f stamps/icedtea-stage2.stamp

stamps/icedtea-debug-stage2.stamp: stamps/icedtea-debug.stamp \
 stamps/add-cacao-debug.stamp stamps/add-zero-debug.stamp stamps/add-jamvm-debug.stamp \
 stamps/check-crypto-debug.stamp stamps/add-archive-debug.stamp
	mkdir -p stamps
	touch $@

clean-icedtea-debug-stage2: clean-add-jamvm-debug clean-check-crypto-debug \
 clean-add-archive-debug
	rm -f stamps/icedtea-debug-stage2.stamp

# OpenJDK boot Targets
# ===================

stamps/icedtea-boot-configure.stamp: stamps/bootstrap-directory-symlink-stage1.stamp \
 stamps/download.stamp $(OPENJDK_BOOT_TREE) stamps/cacao.stamp stamps/jamvm.stamp
	mkdir -p $(BOOT_BUILD_OUTPUT_DIR)
	cd $(BOOT_BUILD_OUTPUT_DIR) && \
	$(SHELL) $(abs_top_builddir)/openjdk-boot/configure $(ICEDTEA_CONFIGURE_BOOT)
	mkdir -p stamps
	touch $@

stamps/icedtea-boot.stamp: stamps/icedtea-boot-configure.stamp
	$(ICEDTEA_UNSET) $(ARCH_PREFIX) $(ICEDTEA_MAKE) \
	  $(ICEDTEA_ENV_BOOT) \
	  -C $(BOOT_BUILD_OUTPUT_DIR) \
	  images
	$(abs_top_builddir)/pax-mark-vm $(BUILD_BOOT_SDK_DIR) true
	@echo "Bootstrapped IcedTea is served:" $(BUILD_BOOT_SDK_DIR)
	mkdir -p stamps
	touch $@

# Rebuild targets

rebuild:
@BOOTSTRAPPING_TRUE@	rm -f stamps/icedtea-boot.stamp
@BOOTSTRAPPING_TRUE@	rm -f stamps/icedtea-stage1.stamp
@BOOTSTRAPPING_TRUE@	$(ARCH_PREFIX) $(MAKE) icedtea-stage1
@BOOTSTRAPPING_TRUE@	@echo "bootstrap-poured IcedTea is served (again):" $(BUILD_BOOT_SDK_DIR)
@BOOTSTRAPPING_FALSE@	rm -f stamps/icedtea.stamp
@BOOTSTRAPPING_FALSE@	rm -f stamps/icedtea-stage2.stamp
@BOOTSTRAPPING_FALSE@	$(ARCH_PREFIX) $(MAKE) icedtea-stage2
@BOOTSTRAPPING_FALSE@	@echo "IcedTea is served (again):" $(BUILD_SDK_DIR)

hotspot:
@BOOTSTRAPPING_TRUE@	rm -f stamps/icedtea-boot.stamp
@BOOTSTRAPPING_TRUE@	rm -f stamps/icedtea-stage1.stamp
@BOOTSTRAPPING_TRUE@	$(ARCH_PREFIX) $(MAKE) ICEDTEA_BUILD_TARGET=hotspot icedtea-stage1
@BOOTSTRAPPING_TRUE@	mkdir -p \
@BOOTSTRAPPING_TRUE@	   $(BUILD_BOOT_SDK_DIR)/jre/lib/$(INSTALL_ARCH_DIR)/server
@BOOTSTRAPPING_TRUE@	cp $(BOOT_BUILD_OUTPUT_DIR)/$(SERVER_DIR)/libjvm.so \
@BOOTSTRAPPING_TRUE@	   $(BUILD_BOOT_SDK_DIR)/jre/lib/$(INSTALL_ARCH_DIR)/server
@BOOTSTRAPPING_TRUE@	@echo "HotSpot is served:" $(BUILD_BOOT_SDK_DIR)
@BOOTSTRAPPING_FALSE@	rm -f stamps/icedtea.stamp
@BOOTSTRAPPING_FALSE@	rm -f stamps/icedtea-stage2.stamp
@BOOTSTRAPPING_FALSE@	$(ARCH_PREFIX) $(MAKE) ICEDTEA_BUILD_TARGET=hotspot icedtea-stage2
@BOOTSTRAPPING_FALSE@	mkdir -p \
@BOOTSTRAPPING_FALSE@	   $(BUILD_SDK_DIR)/jre/lib/$(INSTALL_ARCH_DIR)/server
@BOOTSTRAPPING_FALSE@	cp $(BOOT_BUILD_OUTPUT_DIR)/$(SERVER_DIR)/libjvm.so \
@BOOTSTRAPPING_FALSE@	   $(BUILD_SDK_DIR)/jre/lib/$(INSTALL_ARCH_DIR)/server
@BOOTSTRAPPING_FALSE@	@echo "HotSpot is served:" $(BUILD_SDK_DIR)

clean-icedtea-boot:
	rm -rf $(BOOT_BUILD_OUTPUT_DIR)
	rm -f stamps/icedtea-boot-configure.stamp
	rm -f stamps/icedtea-boot.stamp

stamps/check-crypto-boot.stamp: stamps/cryptocheck.stamp stamps/icedtea-boot.stamp
	if [ -e $(BUILD_BOOT_SDK_DIR)/bin/java ] ; then \
	  $(BUILD_BOOT_SDK_DIR)/bin/java -cp $(CRYPTO_CHECK_BUILD_DIR) TestCryptoLevel ; \
	fi
	mkdir -p stamps
	touch $@

clean-check-crypto-boot:
	rm -f stamps/check-crypto-boot.stamp

stamps/add-archive-boot.stamp: stamps/icedtea-boot.stamp
@ENABLE_CACAO_FALSE@@ENABLE_JAMVM_FALSE@@ZERO_BUILD_FALSE@	if [ -e $(BUILD_BOOT_SDK_DIR)/bin/java ] ; then \
@ENABLE_CACAO_FALSE@@ENABLE_JAMVM_FALSE@@ZERO_BUILD_FALSE@	  if test "x$(INSTALL_ARCH_DIR)" != "xppc64" -a "x$(INSTALL_ARCH_DIR)" != "xppc64le" ; then \
@ENABLE_CACAO_FALSE@@ENABLE_JAMVM_FALSE@@ZERO_BUILD_FALSE@	    $(BUILD_BOOT_SDK_DIR)/bin/java -Xshare:dump ; \
@ENABLE_CACAO_FALSE@@ENABLE_JAMVM_FALSE@@ZERO_BUILD_FALSE@	  fi ; \
@ENABLE_CACAO_FALSE@@ENABLE_JAMVM_FALSE@@ZERO_BUILD_FALSE@	fi
	touch $@

clean-add-archive-boot:
	rm -vf $(BUILD_BOOT_SDK_DIR)/jre/lib/$(INSTALL_ARCH_DIR)/*/*.jsa
	rm -f stamps/add-archive-boot.stamp

stamps/icedtea-stage1.stamp: stamps/icedtea-boot.stamp stamps/check-crypto-boot.stamp \
 stamps/add-archive-boot.stamp
	mkdir -p stamps
	touch $@

clean-icedtea-stage1: clean-check-crypto-boot clean-add-archive-boot
	rm -f stamps/icedtea-stage1.stamp

# JamVM

stamps/jamvm.stamp: stamps/jamvm-configure.stamp stamps/jamvm-build.stamp stamps/jamvm-install.stamp
	mkdir -p stamps
	touch stamps/jamvm.stamp

stamps/jamvm-configure.stamp: $(OPENJDK_TREE)
@BUILD_JAMVM_TRUE@	cd jamvm/jamvm && \
@BUILD_JAMVM_TRUE@	./autogen.sh --with-java-runtime-library=openjdk8 \
@BUILD_JAMVM_TRUE@	  --prefix=$(abs_top_builddir)/jamvm/install
	mkdir -p stamps
	touch $@

stamps/jamvm-build.stamp: stamps/jamvm-configure.stamp
@BUILD_JAMVM_TRUE@	cd jamvm/jamvm && \
@BUILD_JAMVM_TRUE@	$(ARCH_PREFIX) $(MAKE) -j$(PARALLEL_JOBS)
	mkdir -p stamps
	touch $@

stamps/jamvm-install.stamp: stamps/jamvm-build.stamp
@BUILD_JAMVM_TRUE@	cd jamvm/jamvm && \
@BUILD_JAMVM_TRUE@	$(ARCH_PREFIX) $(MAKE) -j$(PARALLEL_JOBS) install
@BUILD_JAMVM_TRUE@	mkdir -p $(abs_top_builddir)/jamvm/install/hotspot/lib
@BUILD_JAMVM_TRUE@	touch $(abs_top_builddir)/jamvm/install/hotspot/lib/sa-jdi.jar
@BUILD_JAMVM_TRUE@	mkdir -p $(abs_top_builddir)/jamvm/install/hotspot/jre/lib/$(INSTALL_ARCH_DIR)/server
@BUILD_JAMVM_TRUE@	cp $(abs_top_builddir)/jamvm/install/lib/libjvm.so \
@BUILD_JAMVM_TRUE@	  $(abs_top_builddir)/jamvm/install/hotspot/jre/lib/$(INSTALL_ARCH_DIR)/server
@BUILD_JAMVM_TRUE@	ln -sf server $(abs_top_builddir)/jamvm/install/hotspot/jre/lib/$(INSTALL_ARCH_DIR)/client
@BUILD_JAMVM_TRUE@	touch $(abs_top_builddir)/jamvm/install/hotspot/jre/lib/$(INSTALL_ARCH_DIR)/server/Xusage.txt
@BUILD_JAMVM_TRUE@	ln -sf libjvm.so $(abs_top_builddir)/jamvm/install/hotspot/jre/lib/$(INSTALL_ARCH_DIR)/client/libjsig.so
	mkdir -p stamps
	touch $@

clean-jamvm:
	rm -rf jamvm
	rm -f stamps/jamvm-configure.stamp stamps/jamvm-build.stamp stamps/jamvm-install.stamp
	rm -f stamps/jamvm.stamp

# Targets for additional VMs

stamps/add-jamvm.stamp: stamps/icedtea.stamp stamps/jamvm.stamp
@ADD_JAMVM_BUILD_TRUE@	mkdir -p $(BUILD_JRE_ARCH_DIR)/jamvm
@ADD_JAMVM_BUILD_TRUE@	install -m 644 jamvm/install/lib/libjvm.so \
@ADD_JAMVM_BUILD_TRUE@		$(BUILD_JRE_ARCH_DIR)/jamvm/
@ADD_JAMVM_BUILD_TRUE@	printf -- '-jamvm KNOWN\n' >> $(BUILD_JRE_ARCH_DIR)/jvm.cfg
@ADD_JAMVM_BUILD_FALSE@	printf -- '-jamvm ERROR\n' >> $(BUILD_JRE_ARCH_DIR)/jvm.cfg
	touch $@

clean-add-jamvm:
	rm -rf $(BUILD_JRE_ARCH_DIR)/jamvm
	if [ -e $(BUILD_JRE_ARCH_DIR)/jvm.cfg ] ; then \
	  $(SED) -i 's#-jamvm KNOWN#-jamvm ERROR#' $(BUILD_JRE_ARCH_DIR)/jvm.cfg ; \
	fi
	rm -f stamps/add-jamvm.stamp

stamps/add-jamvm-debug.stamp: stamps/icedtea-debug.stamp stamps/jamvm.stamp
@ADD_JAMVM_BUILD_TRUE@	mkdir -p $(BUILD_DEBUG_JRE_ARCH_DIR)/jamvm
@ADD_JAMVM_BUILD_TRUE@	install -m 644 jamvm/install/lib/libjvm.so \
@ADD_JAMVM_BUILD_TRUE@		$(BUILD_DEBUG_JRE_ARCH_DIR)/jamvm/
@ADD_JAMVM_BUILD_TRUE@	printf -- '-jamvm KNOWN\n' >> $(BUILD_DEBUG_JRE_ARCH_DIR)/jvm.cfg
@ADD_JAMVM_BUILD_FALSE@	printf -- '-jamvm ERROR\n' >> $(BUILD_DEBUG_JRE_ARCH_DIR)/jvm.cfg
	touch $@

clean-add-jamvm-debug:
	rm -rf $(BUILD_DEBUG_JRE_ARCH_DIR)/jamvm
	if [ -e $(BUILD_DEBUG_JRE_ARCH_DIR)/jvm.cfg ] ; then \
	  $(SED) -i 's#-jamvm KNOWN#-jamvm ERROR#' $(BUILD_DEBUG_JRE_ARCH_DIR)/jvm.cfg ; \
	fi
	rm -f stamps/add-jamvm-debug.stamp

# CACAO

stamps/cacao.stamp: stamps/cacao-configure.stamp stamps/cacao-build.stamp stamps/cacao-install.stamp
	mkdir -p stamps
	touch $@

stamps/cacao-configure.stamp: $(OPENJDK_TREE)
@BUILD_CACAO_TRUE@@USE_SYSTEM_CACAO_FALSE@	cd cacao/cacao && \
@BUILD_CACAO_TRUE@@USE_SYSTEM_CACAO_FALSE@	./autogen.sh && \
@BUILD_CACAO_TRUE@@USE_SYSTEM_CACAO_FALSE@	mkdir ../cacao.build && \
@BUILD_CACAO_TRUE@@USE_SYSTEM_CACAO_FALSE@	cd ../cacao.build && \
@BUILD_CACAO_TRUE@@USE_SYSTEM_CACAO_FALSE@	$(ARCH_PREFIX) ../cacao/configure \
@BUILD_CACAO_TRUE@@USE_SYSTEM_CACAO_FALSE@	  --host=$(host_alias) \
@BUILD_CACAO_TRUE@@USE_SYSTEM_CACAO_FALSE@	  --build=$(build_alias) \
@BUILD_CACAO_TRUE@@USE_SYSTEM_CACAO_FALSE@	  --target=$(target_alias) \
@BUILD_CACAO_TRUE@@USE_SYSTEM_CACAO_FALSE@	  --prefix=$(abs_top_builddir)/cacao/install \
@BUILD_CACAO_TRUE@@USE_SYSTEM_CACAO_FALSE@	  --with-java-runtime-library=openjdk8 \
@BUILD_CACAO_TRUE@@USE_SYSTEM_CACAO_FALSE@	  --with-java-runtime-library-prefix=$(abs_top_builddir)/openjdk \
@BUILD_CACAO_TRUE@@USE_SYSTEM_CACAO_FALSE@	  --with-java-runtime-library-classes=$(RUNTIME) \
@BUILD_CACAO_TRUE@@USE_SYSTEM_CACAO_FALSE@	  --with-libatomic-ops=no \
@BUILD_CACAO_TRUE@@USE_SYSTEM_CACAO_FALSE@	  --enable-jre-layout $(CACAO_CONFIGURE_ARGS);
	mkdir -p stamps
	touch $@

stamps/cacao-build.stamp: stamps/cacao-configure.stamp
@BUILD_CACAO_TRUE@@USE_SYSTEM_CACAO_FALSE@	cd cacao/cacao.build && \
@BUILD_CACAO_TRUE@@USE_SYSTEM_CACAO_FALSE@	$(ARCH_PREFIX) $(MAKE) -j$(PARALLEL_JOBS)
	mkdir -p stamps
	touch $@

stamps/cacao-install.stamp: stamps/cacao-build.stamp
@BUILD_CACAO_TRUE@@USE_SYSTEM_CACAO_FALSE@	cd cacao/cacao.build && \
@BUILD_CACAO_TRUE@@USE_SYSTEM_CACAO_FALSE@	$(ARCH_PREFIX) $(MAKE) -j$(PARALLEL_JOBS) install
@BUILD_CACAO_TRUE@@USE_SYSTEM_CACAO_FALSE@	mkdir -p $(abs_top_builddir)/cacao/install/hotspot/lib
@BUILD_CACAO_TRUE@@USE_SYSTEM_CACAO_FALSE@	touch $(abs_top_builddir)/cacao/install/hotspot/lib/sa-jdi.jar
@BUILD_CACAO_TRUE@@USE_SYSTEM_CACAO_FALSE@	mkdir -p $(abs_top_builddir)/cacao/install/hotspot/jre/lib/$(INSTALL_ARCH_DIR)/server
@BUILD_CACAO_TRUE@@USE_SYSTEM_CACAO_FALSE@	cp $(abs_top_builddir)/cacao/install/lib/libjvm.so \
@BUILD_CACAO_TRUE@@USE_SYSTEM_CACAO_FALSE@	  $(abs_top_builddir)/cacao/install/hotspot/jre/lib/$(INSTALL_ARCH_DIR)/server
@BUILD_CACAO_TRUE@@USE_SYSTEM_CACAO_FALSE@	ln -sf server $(abs_top_builddir)/cacao/install/hotspot/jre/lib/$(INSTALL_ARCH_DIR)/client
@BUILD_CACAO_TRUE@@USE_SYSTEM_CACAO_FALSE@	touch $(abs_top_builddir)/cacao/install/hotspot/jre/lib/$(INSTALL_ARCH_DIR)/server/Xusage.txt
@BUILD_CACAO_TRUE@@USE_SYSTEM_CACAO_FALSE@	ln -sf libjvm.so $(abs_top_builddir)/cacao/install/hotspot/jre/lib/$(INSTALL_ARCH_DIR)/client/libjsig.so
	mkdir -p stamps
	touch $@

clean-cacao:
	rm -rf cacao/cacao.build cacao/install
	rm -f stamps/cacao-configure.stamp stamps/cacao-build.stamp stamps/cacao-install.stamp
	rm -f stamps/cacao.stamp

# targets for additional VMs

stamps/add-cacao.stamp: stamps/icedtea.stamp stamps/cacao.stamp
@ADD_CACAO_BUILD_TRUE@	mkdir -p $(BUILD_JRE_ARCH_DIR)/cacao
@ADD_CACAO_BUILD_TRUE@	install -m 644 cacao/install/lib/libjvm.so \
@ADD_CACAO_BUILD_TRUE@		$(BUILD_JRE_ARCH_DIR)/cacao/
@ADD_CACAO_BUILD_TRUE@	install -m 644 cacao/install/jre/lib/$(INSTALL_ARCH_DIR)/libjsig.so \
@ADD_CACAO_BUILD_TRUE@		$(BUILD_JRE_ARCH_DIR)/cacao/
@ADD_CACAO_BUILD_TRUE@	install -m 644 cacao/install/jre/lib/$(INSTALL_ARCH_DIR)/server/Xusage.txt \
@ADD_CACAO_BUILD_TRUE@		$(BUILD_JRE_ARCH_DIR)/cacao/
@ADD_CACAO_BUILD_TRUE@	printf -- '-cacao KNOWN\n' >> $(BUILD_JRE_ARCH_DIR)/jvm.cfg
@ADD_CACAO_BUILD_FALSE@	printf -- '-cacao ERROR\n' >> $(BUILD_JRE_ARCH_DIR)/jvm.cfg
	touch $@

clean-add-cacao:
	rm -rf $(BUILD_JRE_ARCH_DIR)/cacao
	if [ -e $(BUILD_JRE_ARCH_DIR)/jvm.cfg ] ; then \
	  $(SED) -i 's#-cacao KNOWN#-cacao ERROR#' $(BUILD_JRE_ARCH_DIR)/jvm.cfg ; \
	fi
	rm -f stamps/add-cacao.stamp

stamps/add-cacao-debug.stamp: stamps/icedtea-debug.stamp stamps/cacao.stamp
@ADD_CACAO_BUILD_TRUE@	mkdir -p $(BUILD_DEBUG_JRE_ARCH_DIR)/cacao
@ADD_CACAO_BUILD_TRUE@	install -m 644 cacao/install/lib/libjvm.so \
@ADD_CACAO_BUILD_TRUE@		$(BUILD_DEBUG_JRE_ARCH_DIR)/cacao/
@ADD_CACAO_BUILD_TRUE@	install -m 644 cacao/install/jre/lib/$(INSTALL_ARCH_DIR)/libjsig.so \
@ADD_CACAO_BUILD_TRUE@		$(BUILD_DEBUG_JRE_ARCH_DIR)/cacao/
@ADD_CACAO_BUILD_TRUE@	install -m 644 cacao/install/jre/lib/$(INSTALL_ARCH_DIR)/server/Xusage.txt \
@ADD_CACAO_BUILD_TRUE@		$(BUILD_DEBUG_JRE_ARCH_DIR)/cacao/
@ADD_CACAO_BUILD_TRUE@	printf -- '-cacao KNOWN\n' >> $(BUILD_DEBUG_JRE_ARCH_DIR)/jvm.cfg
@ADD_CACAO_BUILD_FALSE@	printf -- '-cacao ERROR\n' >> $(BUILD_DEBUG_JRE_ARCH_DIR)/jvm.cfg
	touch $@

clean-add-cacao-debug:
	rm -rf $(BUILD_DEBUG_JRE_ARCH_DIR)/cacao
	if [ -e $(BUILD_DEBUG_JRE_ARCH_DIR)/jvm.cfg ] ; then \
	  $(SED) -i 's#-cacao KNOWN#-cacao ERROR#' $(BUILD_DEBUG_JRE_ARCH_DIR)/jvm.cfg ; \
	fi
	rm -f stamps/add-cacao-debug.stamp

stamps/add-zero.stamp: stamps/icedtea.stamp
	mkdir -p stamps
@ADD_ZERO_BUILD_TRUE@	mkdir -p zerovm

@ADD_ZERO_BUILD_TRUE@	cd zerovm && \
@ADD_ZERO_BUILD_TRUE@	    $(ADD_ZERO_EXTRA_BUILD_ENV) \
@ADD_ZERO_BUILD_TRUE@		$(ARCH_PREFIX) $(abs_top_srcdir)/configure $(ADD_ZERO_CONFIGURE_ARGS)

@ADD_ZERO_BUILD_TRUE@	$(ADD_ZERO_EXTRA_BUILD_ENV) \
@ADD_ZERO_BUILD_TRUE@		$(ARCH_PREFIX) $(MAKE) -C zerovm ICEDTEA_BUILD_TARGET=hotspot icedtea-stage2

@ADD_ZERO_BUILD_TRUE@@ZERO_BUILD_TRUE@	mkdir -p $(BUILD_JRE_ARCH_DIR)/shark
@ADD_ZERO_BUILD_TRUE@@ZERO_BUILD_TRUE@	cp -a zerovm/$(BUILD_DIR)/hotspot/import/jre/lib/$(INSTALL_ARCH_DIR)/server/* \
@ADD_ZERO_BUILD_TRUE@@ZERO_BUILD_TRUE@		$(BUILD_JRE_ARCH_DIR)/shark/
@ADD_ZERO_BUILD_TRUE@@ZERO_BUILD_TRUE@	printf -- '-shark KNOWN\n' >> $(BUILD_JRE_ARCH_DIR)/jvm.cfg
@ADD_ZERO_BUILD_TRUE@@ZERO_BUILD_TRUE@	printf -- '-zero ERROR\n' >> $(BUILD_JRE_ARCH_DIR)/jvm.cfg
@ADD_ZERO_BUILD_TRUE@@ZERO_BUILD_FALSE@	mkdir -p $(BUILD_JRE_ARCH_DIR)/zero
@ADD_ZERO_BUILD_TRUE@@ZERO_BUILD_FALSE@	cp -a zerovm/$(BUILD_DIR)/hotspot/import/jre/lib/$(INSTALL_ARCH_DIR)/server/* \
@ADD_ZERO_BUILD_TRUE@@ZERO_BUILD_FALSE@		$(BUILD_JRE_ARCH_DIR)/zero/
@ADD_ZERO_BUILD_TRUE@@ZERO_BUILD_FALSE@	printf -- '-zero KNOWN\n' >> $(BUILD_JRE_ARCH_DIR)/jvm.cfg
@ADD_ZERO_BUILD_TRUE@@ZERO_BUILD_FALSE@	printf -- '-shark ERROR\n' >> $(BUILD_JRE_ARCH_DIR)/jvm.cfg
@ADD_ZERO_BUILD_FALSE@	printf -- '-zero ERROR\n' >> $(BUILD_JRE_ARCH_DIR)/jvm.cfg
@ADD_ZERO_BUILD_FALSE@	printf -- '-shark ERROR\n' >> $(BUILD_JRE_ARCH_DIR)/jvm.cfg
	touch $@

clean-add-zero:
	rm -rf $(BUILD_JRE_ARCH_DIR)/zero
	rm -rf $(BUILD_JRE_ARCH_DIR)/shark
	rm -rf zerovm
	if [ -e $(BUILD_JRE_ARCH_DIR)/jvm.cfg ] ; then \
	  $(SED) -i 's#-zero KNOWN#-zero ERROR#' $(BUILD_JRE_ARCH_DIR)/jvm.cfg ; \
	  $(SED) -i 's#-shark KNOWN#-shark ERROR#' $(BUILD_JRE_ARCH_DIR)/jvm.cfg ; \
	fi
	rm -f stamps/add-zero.stamp

stamps/add-zero-debug.stamp: stamps/icedtea-debug.stamp
	mkdir -p stamps
@ADD_ZERO_BUILD_TRUE@	mkdir -p zerovm

@ADD_ZERO_BUILD_TRUE@	cd zerovm && \
@ADD_ZERO_BUILD_TRUE@	    $(ADD_ZERO_EXTRA_BUILD_ENV) \
@ADD_ZERO_BUILD_TRUE@		$(ARCH_PREFIX) $(abs_top_srcdir)/configure $(ADD_ZERO_CONFIGURE_ARGS)

@ADD_ZERO_BUILD_TRUE@	$(ADD_ZERO_EXTRA_BUILD_ENV) \
@ADD_ZERO_BUILD_TRUE@		$(ARCH_PREFIX) $(MAKE) -C zerovm ICEDTEA_BUILD_TARGET=hotspot icedtea-stage2

@ADD_ZERO_BUILD_TRUE@@ZERO_BUILD_TRUE@	mkdir -p $(BUILD_DEBUG_JRE_ARCH_DIR)/shark
@ADD_ZERO_BUILD_TRUE@@ZERO_BUILD_TRUE@	cp -a zerovm/$(BUILD_OUTPUT_DIR)/hotspot/import/jre/lib/$(INSTALL_ARCH_DIR)/server/* \
@ADD_ZERO_BUILD_TRUE@@ZERO_BUILD_TRUE@		$(BUILD_DEBUG_JRE_ARCH_DIR)/shark/
@ADD_ZERO_BUILD_TRUE@@ZERO_BUILD_TRUE@	printf -- '-shark KNOWN\n' >> $(BUILD_DEBUG_JRE_ARCH_DIR)/jvm.cfg
@ADD_ZERO_BUILD_TRUE@@ZERO_BUILD_FALSE@	mkdir -p $(BUILD_DEBUG_JRE_ARCH_DIR)/zero
@ADD_ZERO_BUILD_TRUE@@ZERO_BUILD_FALSE@	cp -a zerovm/$(BUILD_OUTPUT_DIR)/hotspot/import/jre/lib/$(INSTALL_ARCH_DIR)/server/* \
@ADD_ZERO_BUILD_TRUE@@ZERO_BUILD_FALSE@		$(BUILD_DEBUG_JRE_ARCH_DIR)/zero/
@ADD_ZERO_BUILD_TRUE@@ZERO_BUILD_FALSE@	printf -- '-zero KNOWN\n' >> $(BUILD_DEBUG_JRE_ARCH_DIR)/jvm.cfg
@ADD_ZERO_BUILD_FALSE@	printf -- '-zero ERROR\n' >> $(BUILD_DEBUG_JRE_ARCH_DIR)/jvm.cfg
@ADD_ZERO_BUILD_FALSE@	printf -- '-shark ERROR\n' >> $(BUILD_DEBUG_JRE_ARCH_DIR)/jvm.cfg
	touch $@

clean-add-zero-debug:
	rm -rf $(BUILD_DEBUG_JRE_ARCH_DIR)/zero
	rm -rf $(BUILD_DEBUG_JRE_ARCH_DIR)/shark
	rm -rf zerovm
	if [ -e $(BUILD_DEBUG_JRE_ARCH_DIR)/jvm.cfg ] ; then \
	  $(SED) -i 's#-zero KNOWN#-zero ERROR#' $(BUILD_DEBUG_JRE_ARCH_DIR)/jvm.cfg ; \
	  $(SED) -i 's#-shark KNOWN#-shark ERROR#' $(BUILD_DEBUG_JRE_ARCH_DIR)/jvm.cfg ; \
	fi
	rm -f stamps/add-zero-debug.stamp

# end additional VMs

# jtreg

stamps/jtreg.stamp: stamps/icedtea-stage2.stamp
	rm -rf test/jtreg/classes
	mkdir -p test/jtreg/classes
	$(BOOT_DIR)/bin/javac $(IT_JAVACFLAGS) -d test/jtreg/classes \
	   `find $(abs_top_srcdir)/test/jtreg/com -name '*.java'`
	(cd $(abs_top_srcdir)/test/jtreg; \
	 $(BOOT_DIR)/bin/jar cfm $(abs_top_builddir)/test/jtreg.jar \
	   META-INF/MANIFEST.MF \
	   legal  README JavaTest.cmdMgrs.lst JavaTest.toolMgrs.lst \
	   `find com -type f -a -not -name '*.java'` \
	   -C $(abs_top_builddir)/test/jtreg/classes com)
	mkdir -p stamps
	touch $@

clean-jtreg:
	rm -rf test/jtreg/classes
	if [ $(abs_top_srcdir) != $(abs_top_builddir) ] ; then \
	  if [ -e test/jtreg ] ; then \
	    rmdir test/jtreg ; \
	  fi ; \
	fi
	rm -f test/jtreg.jar
	rm -f stamps/jtreg.stamp

check-hotspot: stamps/jtreg.stamp
	mkdir -p test/hotspot/JTwork test/hotspot/JTreport
	$(BOOT_DIR)/bin/java -jar test/jtreg.jar -v1 -a -ignore:quiet \
		-w:test/hotspot/JTwork -r:test/hotspot/JTreport \
		-jdk:$(BUILD_SDK_DIR) \
		$(ICEDTEA_JTREG_OPTIONS) \
		`pwd`/openjdk/hotspot/test \
	    | tee test/$@.log

check-langtools: stamps/jtreg.stamp
	mkdir -p test/langtools/JTwork test/langtools/JTreport
	$(BOOT_DIR)/bin/java -jar test/jtreg.jar -v1 -a -ignore:quiet \
		-w:test/langtools/JTwork -r:test/langtools/JTreport \
		$${ICEDTEA_JTREG_OTHERVM:--samevm} \
		-jdk:$(BUILD_SDK_DIR) \
		$(ICEDTEA_JTREG_OPTIONS) \
		-exclude:$(abs_top_srcdir)/test/jtreg/excludelist.langtools.jtx \
		`pwd`/openjdk/langtools/test \
	    | tee test/$@.log

check-jdk: stamps/jtreg.stamp
	mkdir -p test/jdk/JTwork test/jdk/JTreport
@ENABLE_CACAO_TRUE@	CACAO_EXCLUDE="-exclude:$(abs_top_srcdir)/test/jtreg/excludelist.jdk.cacao.jtx"
	if test "x$${DISPLAY}" = "x"; then XVFB_RUN="@XVFB_RUN_CMD@"; fi; \
	if test "x$${DISPLAY}" = "x" && test "x$${XVFB_RUN}" = "x"; then \
		echo "WARNING: DISPLAY not set and xvfb-run not found"; \
	fi; \
	$${XVFB_RUN} \
	$(BOOT_DIR)/bin/java -jar test/jtreg.jar -v1 -a -ignore:quiet \
		-w:test/jdk/JTwork -r:test/jdk/JTreport \
		$${ICEDTEA_JTREG_OTHERVM:--samevm} \
		-jdk:$(BUILD_SDK_DIR) \
		$(ICEDTEA_JTREG_OPTIONS) $(CACAO_EXCLUDE) \
		-exclude:$(abs_top_srcdir)/test/jtreg/excludelist.jdk.jtx \
		`pwd`/openjdk/jdk/test \
	    | tee test/$@.log

clean-jtreg-reports:
	rm -rf test/hotspot test/langtools test/jdk
	rm -f test/check-*.log test/jtreg-summary.log

jtregcheck: $(TESTS_TO_RUN)
	$(MKDIR_P) test
	for i in $(TEST_SUITES); do \
	  echo "--------------- jtreg console summary for $$i ---------------"; \
	  egrep -v '^(Passed:|Directory|Re[a-z]+\ written\ to)' test/check-$$i.log; \
	done | tee test/jtreg-summary.log

	: # kill testsuite processes still hanging
	@pids=$$($(jtreg_pids)); \
	if [ -n "$$pids" ]; then \
	  echo "killing processes..."; \
	  $(jtreg_processes); \
	  kill -1 $$pids; \
	  sleep 2; \
	  pids=$$($(jtreg_pids)); \
	  if [ -n "$$pids" ]; then \
	    echo "try harder..."; \
	    $(jtreg_processes); \
	    kill -9 $$pids; \
	    sleep 2; \
	  fi; \
	else \
	  echo "nothing to cleanup"; \
	fi; \
	pids=$$($(jtreg_pids)); \
	if [ -n "$$pids" ]; then \
	  echo "leftover processes..."; \
	  $(jtreg_processes); \
	fi

check-tapset-probes: 
@ENABLE_SYSTEMTAP_TRUE@	if test "x${PERL}" = "x"; then \
@ENABLE_SYSTEMTAP_TRUE@	  echo "ERROR: Perl not found"; exit -1; \
@ENABLE_SYSTEMTAP_TRUE@	fi
@ENABLE_SYSTEMTAP_TRUE@	if test "x${STAP}" = "x"; then \
@ENABLE_SYSTEMTAP_TRUE@	  echo "ERROR: stap not found"; exit -1; \
@ENABLE_SYSTEMTAP_TRUE@	fi
@ENABLE_SYSTEMTAP_TRUE@	$(MKDIR_P) test
@ENABLE_SYSTEMTAP_TRUE@	${PERL} $(abs_top_builddir)/test/tapset/jstaptest.pl \
@ENABLE_SYSTEMTAP_TRUE@	  -B $(BUILD_IMAGE_DIR) -A $(BUILD_ARCH_DIR) \
@ENABLE_SYSTEMTAP_TRUE@	  -S $(abs_top_srcdir)/test/tapset \
@ENABLE_SYSTEMTAP_TRUE@	  -a test/check-stap.log -p

check-tapset-jstack: 
@ENABLE_SYSTEMTAP_TRUE@	if test "x${PERL}" = "x"; then \
@ENABLE_SYSTEMTAP_TRUE@	  echo "ERROR: Perl not found"; exit -1; \
@ENABLE_SYSTEMTAP_TRUE@	fi
@ENABLE_SYSTEMTAP_TRUE@	if test "x${STAP}" = "x"; then \
@ENABLE_SYSTEMTAP_TRUE@	  echo "ERROR: stap not found"; exit -1; \
@ENABLE_SYSTEMTAP_TRUE@	fi
@ENABLE_SYSTEMTAP_TRUE@	$(MKDIR_P) test
@ENABLE_SYSTEMTAP_TRUE@	${PERL} $(abs_top_builddir)/test/tapset/jstaptest.pl \
@ENABLE_SYSTEMTAP_TRUE@	  -B $(BUILD_IMAGE_DIR) -A $(BUILD_ARCH_DIR) \
@ENABLE_SYSTEMTAP_TRUE@	  -S $(abs_top_srcdir)/test/tapset \
@ENABLE_SYSTEMTAP_TRUE@	  -a test/check-stap.log -j

check-tapset: check-tapset-probes check-tapset-jstack

clean-tapset-report:
@ENABLE_SYSTEMTAP_TRUE@	rm -f test/check-stap.log

# Crypto Level Check

stamps/cryptocheck.stamp: $(INITIAL_BOOTSTRAP_LINK_STAMP)
	mkdir -p $(CRYPTO_CHECK_BUILD_DIR)
	$(BOOT_DIR)/bin/javac $(IT_JAVACFLAGS) \
	  -d $(CRYPTO_CHECK_BUILD_DIR) $(CRYPTO_CHECK_SRCS)
	mkdir -p stamps
	touch $@

clean-cryptocheck:
	rm -rf $(CRYPTO_CHECK_BUILD_DIR)
	rm -f stamps/cryptocheck.stamp

# ECC Availability Check

stamps/ecccheck.stamp: $(INITIAL_BOOTSTRAP_LINK_STAMP)
	mkdir -p $(ECC_CHECK_BUILD_DIR)
	$(BOOT_DIR)/bin/javac $(IT_JAVACFLAGS) \
	  -d $(ECC_CHECK_BUILD_DIR) $(ECC_CHECK_SRCS)
	mkdir -p stamps
	touch $@

clean-ecccheck:
	rm -rf $(ECC_CHECK_BUILD_DIR)
	rm -f stamps/ecccheck.stamp

stamps/check-ecc.stamp: stamps/ecccheck.stamp stamps/icedtea.stamp
	if [ -e $(BUILD_SDK_DIR)/bin/java ] ; then \
	  $(BUILD_SDK_DIR)/bin/java -cp $(ECC_CHECK_BUILD_DIR) TestEllipticCurveCryptoSupport $(ECC_RESULT) ; \
	fi
	mkdir -p stamps
	touch $@

clean-check-ecc:
	rm -f stamps/check-ecc.stamp

# File substitution

policytool-@JAVA_VER@.desktop: policytool.desktop
	cat $< | $(SED) "s#_BINDIR_#$(bindir)#" > $@

clean-policytool-@JAVA_VER@.desktop:
	rm -f policytool-@JAVA_VER@.desktop

jconsole-@JAVA_VER@.desktop: jconsole.desktop
	cat $< | $(SED) "s#_BINDIR_#$(bindir)#" > $@

clean-jconsole-@JAVA_VER@.desktop:
	rm -f jconsole-@JAVA_VER@.desktop

# Installation Targets
# ====================

install-exec-local:
	${mkinstalldirs} $(DESTDIR)$(bindir) $(DESTDIR)$(includedir) $(DESTDIR)${exec_prefix}/lib
	${mkinstalldirs} $(DESTDIR)$(includedir)/$(BUILD_OS_DIR) $(DESTDIR)${exec_prefix}/lib/$(INSTALL_ARCH_DIR)
	${mkinstalldirs} $(DESTDIR)${exec_prefix}/lib/$(INSTALL_ARCH_DIR)/jli
	${mkinstalldirs} $(DESTDIR)${prefix}/jre/bin $(DESTDIR)${prefix}/jre/lib
	${mkinstalldirs} $(DESTDIR)${prefix}/jre/lib/$(INSTALL_ARCH_DIR)
	${mkinstalldirs} $(DESTDIR)${prefix}/jre/lib/$(INSTALL_ARCH_DIR)/jli
	${mkinstalldirs} $(DESTDIR)${prefix}/jre/lib/ext
	${mkinstalldirs} $(DESTDIR)${prefix}/tapset
	for files in $(BUILD_SDK_DIR)/bin/*; do \
	  $(INSTALL_PROGRAM) $${files} $(DESTDIR)$(bindir); \
	done
	for files in $(BUILD_SDK_DIR)/include/*.h; do \
	  $(INSTALL_DATA) $${files} $(DESTDIR)$(includedir); \
	done
	for files in $(BUILD_SDK_DIR)/include/$(BUILD_OS_DIR)/*.h; do \
	  $(INSTALL_DATA) $${files} $(DESTDIR)$(includedir)/$(BUILD_OS_DIR); \
	done
	for files in $(BUILD_SDK_DIR)/lib/*.jar; do \
	  $(INSTALL_DATA) $${files} $(DESTDIR)${exec_prefix}/lib; \
	done
	for files in $(BUILD_SDK_DIR)/lib/*.idl; do \
	  $(INSTALL_DATA) $${files} $(DESTDIR)${exec_prefix}/lib; \
	done
	$(INSTALL_PROGRAM) $(BUILD_SDK_DIR)/lib/jexec $(DESTDIR)${exec_prefix}/lib
	for files in $(BUILD_SDK_DIR)/lib/$(INSTALL_ARCH_DIR)/*.so; do \
	  $(INSTALL_PROGRAM) $${files} $(DESTDIR)${exec_prefix}/lib/$(INSTALL_ARCH_DIR); \
	done
	for files in $(BUILD_SDK_DIR)/lib/$(INSTALL_ARCH_DIR)/jli/*.so; do \
	  $(INSTALL_PROGRAM) $${files} $(DESTDIR)${exec_prefix}/lib/$(INSTALL_ARCH_DIR)/jli; \
	done
	for files in $(BUILD_SDK_DIR)/jre/bin/*; do \
	  $(INSTALL_PROGRAM) $${files} $(DESTDIR)${prefix}/jre/bin; \
	done
	for files in $(BUILD_SDK_DIR)/jre/lib/*.jar; do \
	  $(INSTALL_DATA) $${files} $(DESTDIR)${prefix}/jre/lib; \
	done
	$(INSTALL_PROGRAM) $(BUILD_SDK_DIR)/lib/jexec $(DESTDIR)${prefix}/jre/lib
	for files in $(BUILD_SDK_DIR)/jre/lib/$(INSTALL_ARCH_DIR)/*.so; do \
	  $(INSTALL_PROGRAM) $${files} $(DESTDIR)${prefix}/jre/lib/$(INSTALL_ARCH_DIR); \
	done
	for files in $(BUILD_SDK_DIR)/jre/lib/$(INSTALL_ARCH_DIR)/jli/*.so; do \
	  $(INSTALL_PROGRAM) $${files} $(DESTDIR)${prefix}/jre/lib/$(INSTALL_ARCH_DIR)/jli; \
	done
	for vms in client server ; do \
	  if [ -d $(BUILD_SDK_DIR)/jre/lib/$(INSTALL_ARCH_DIR)/$${vms} ] ; then \
	    ${mkinstalldirs} $(DESTDIR)${prefix}/jre/lib/$(INSTALL_ARCH_DIR)/$${vms} ; \
	    for files in $(BUILD_SDK_DIR)/jre/lib/$(INSTALL_ARCH_DIR)/$${vms}/*.so; do \
	      $(INSTALL_PROGRAM) $${files} $(DESTDIR)${prefix}/jre/lib/$(INSTALL_ARCH_DIR)/$${vms}; \
	    done ; \
	  fi ; \
	done
	for files in $(BUILD_SDK_DIR)/jre/lib/ext/*.jar; do \
	  $(INSTALL_DATA) $${files} $(DESTDIR)${prefix}/jre/lib/ext; \
	done
@ENABLE_SYSTEMTAP_TRUE@	for files in $(BUILD_SDK_DIR)/tapset/*.stp; do \
@ENABLE_SYSTEMTAP_TRUE@	  $(INSTALL_DATA) $${files} $(DESTDIR)${prefix}/tapset; \
@ENABLE_SYSTEMTAP_TRUE@	done
	$(abs_top_builddir)/pax-mark-vm $(DESTDIR)${prefix} false

install-data-local:
	${mkinstalldirs} $(DESTDIR)${prefix}
	${mkinstalldirs} $(DESTDIR)${prefix}/jre/.systemPrefs
	${mkinstalldirs} $(DESTDIR)${prefix}/jre/lib
	${mkinstalldirs} $(DESTDIR)${prefix}/jre/lib/$(INSTALL_ARCH_DIR)
	${mkinstalldirs} $(DESTDIR)${prefix}/jre/lib/{cmm,ext,images/cursors,management,security}
	${mkinstalldirs} $(DESTDIR)$(mandir)/{man1,ja_JP.UTF-8/man1}
	${mkinstalldirs} $(DESTDIR)${prefix}/demo
	${mkinstalldirs} $(DESTDIR)${prefix}/sample
	${mkinstalldirs} $(DESTDIR)$(docdir)
	${mkinstalldirs} $(DESTDIR)$(datadir)/applications
	${mkinstalldirs} $(DESTDIR)$(sysconfdir)/.java/.systemPrefs
	for files in $(BUILD_SDK_DIR)/jre/lib/*.properties; do \
	  $(INSTALL_DATA) $${files} $(DESTDIR)${prefix}/jre/lib; \
	done
	$(INSTALL_DATA) $(BUILD_SDK_DIR)/release $(DESTDIR)${prefix}
	$(INSTALL_DATA) $(BUILD_SDK_DIR)/src.zip $(DESTDIR)${prefix}
	$(INSTALL_DATA) $(BUILD_SDK_DIR)/jre/lib/classlist $(DESTDIR)${prefix}/jre/lib
	$(INSTALL_DATA) $(BUILD_SDK_DIR)/jre/lib/currency.data $(DESTDIR)${prefix}/jre/lib
	$(INSTALL_DATA) $(BUILD_SDK_DIR)/jre/lib/jvm.hprof.txt $(DESTDIR)${prefix}/jre/lib
	$(INSTALL_DATA) $(BUILD_SDK_DIR)/jre/lib/meta-index $(DESTDIR)${prefix}/jre/lib
	$(INSTALL_DATA) $(BUILD_SDK_DIR)/jre/lib/psfont.properties.ja $(DESTDIR)${prefix}/jre/lib
	$(INSTALL_DATA) $(BUILD_SDK_DIR)/jre/lib/tzdb.dat $(DESTDIR)${prefix}/jre/lib
	$(INSTALL_DATA) $(BUILD_SDK_DIR)/jre/lib/$(INSTALL_ARCH_DIR)/jvm.cfg \
	  $(DESTDIR)${prefix}/jre/lib/$(INSTALL_ARCH_DIR)
	for vms in client server ; do \
	  if [ -d $(BUILD_SDK_DIR)/jre/lib/$(INSTALL_ARCH_DIR)/$${vms} ] ; then \
	    ${mkinstalldirs} $(DESTDIR)${prefix}/jre/lib/$(INSTALL_ARCH_DIR)/$${vms} ; \
	    $(INSTALL_DATA) $(BUILD_SDK_DIR)/jre/lib/$(INSTALL_ARCH_DIR)/$${vms}/Xusage.txt \
	      $(DESTDIR)${prefix}/jre/lib/$(INSTALL_ARCH_DIR)/$${vms} ; \
	  fi ; \
	done
	for files in $(BUILD_SDK_DIR)/jre/lib/cmm/*.pf; do \
	  $(INSTALL_DATA) $${files} $(DESTDIR)${prefix}/jre/lib/cmm; \
	done
	$(INSTALL_DATA) $(BUILD_SDK_DIR)/jre/lib/ext/meta-index $(DESTDIR)${prefix}/jre/lib/ext
	for files in $(BUILD_SDK_DIR)/jre/lib/images/cursors/*.gif; do \
	  $(INSTALL_DATA) $${files} $(DESTDIR)${prefix}/jre/lib/images/cursors; \
	done
	$(INSTALL_DATA) $(BUILD_SDK_DIR)/jre/lib/images/cursors/cursors.properties \
	  $(DESTDIR)${prefix}/jre/lib/images/cursors
	$(INSTALL_DATA) $(BUILD_SDK_DIR)/jre/lib/management/jmxremote.access \
	  $(DESTDIR)${prefix}/jre/lib/management
	$(INSTALL_DATA) $(BUILD_SDK_DIR)/jre/lib/management/management.properties \
	  $(DESTDIR)${prefix}/jre/lib/management
	for files in $(BUILD_SDK_DIR)/jre/lib/management/*.template; do \
	  $(INSTALL_DATA) $${files} $(DESTDIR)${prefix}/jre/lib/management; \
	done
	$(INSTALL_DATA) $(BUILD_SDK_DIR)/jre/lib/security/cacerts \
	  $(DESTDIR)${prefix}/jre/lib/security
	$(INSTALL_DATA) $(BUILD_SDK_DIR)/jre/lib/security/java.policy \
	  $(DESTDIR)${prefix}/jre/lib/security
	$(INSTALL_DATA) $(BUILD_SDK_DIR)/jre/lib/security/java.security \
	  $(DESTDIR)${prefix}/jre/lib/security
	$(INSTALL_DATA) $(BUILD_SDK_DIR)/jre/lib/security/nss.cfg \
	  $(DESTDIR)${prefix}/jre/lib/security
	$(INSTALL_DATA) $(BUILD_SDK_DIR)/jre/lib/security/blacklisted.certs \
	  $(DESTDIR)${prefix}/jre/lib/security
	for files in $(BUILD_SDK_DIR)/jre/lib/security/*.jar; do \
	  $(INSTALL_DATA) $${files} $(DESTDIR)${prefix}/jre/lib/security; \
	done
	for files in $(BUILD_SDK_DIR)/man/man1/*.1; do \
	  $(INSTALL_DATA) $${files} $(DESTDIR)$(mandir)/man1; \
	done
	for files in $(BUILD_SDK_DIR)/man/ja_JP.UTF-8/man1/*.1; do \
	  $(INSTALL_DATA) $${files} $(DESTDIR)$(mandir)/ja_JP.UTF-8/man1; \
	done
	for items in $(BUILD_SDK_DIR)/demo/*; do \
	  cp -RP $${items} $(DESTDIR)${prefix}/demo ; \
	done
	for items in $(BUILD_SDK_DIR)/sample/*; do \
	  cp -RP $${items} $(DESTDIR)${prefix}/sample ; \
	done
	${INSTALL_DATA} $(srcdir)/README $(DESTDIR)$(docdir)
	${INSTALL_DATA} $(srcdir)/NEWS $(DESTDIR)$(docdir)
	${INSTALL_DATA} $(srcdir)/AUTHORS $(DESTDIR)$(docdir)
	${INSTALL_DATA} $(srcdir)/HACKING $(DESTDIR)$(docdir)
	${INSTALL_DATA} $(srcdir)/COPYING $(DESTDIR)$(docdir)
	${INSTALL_DATA} $(srcdir)/ChangeLog $(DESTDIR)$(docdir)
	${INSTALL_DATA} $(BUILD_SDK_DIR)/ASSEMBLY_EXCEPTION $(DESTDIR)$(docdir)
	${INSTALL_DATA} $(BUILD_SDK_DIR)/LICENSE $(DESTDIR)$(docdir)
	${INSTALL_DATA} $(BUILD_SDK_DIR)/THIRD_PARTY_README $(DESTDIR)$(docdir)
	${INSTALL_DATA} openjdk/jaxp/TRADEMARK $(DESTDIR)$(docdir)
	for sizes in 16 24 32 48 ; do \
	  ${mkinstalldirs} $(DESTDIR)$(datadir)/icons/hicolor/$${sizes}x$${sizes}/apps ; \
	  ${INSTALL_DATA} openjdk/jdk/src/solaris/classes/sun/awt/X11/java-icon$${sizes}.png \
	    $(DESTDIR)$(datadir)/icons/hicolor/$${sizes}x$${sizes}/apps/java-@JAVA_VER@.png ; \
	done
	for files in $(DESKTOP_FILES) ; do \
	  ${INSTALL_DATA} $(builddir)/$${files} $(DESTDIR)$(datadir)/applications ; \
	done
	touch $(DESTDIR)/${prefix}/jre/.systemPrefs/.system.lock
	touch $(DESTDIR)/${prefix}/jre/.systemPrefs/.systemRootModFile
@ENABLE_DOCS_TRUE@	${mkinstalldirs} $(DESTDIR)$(htmldir)
@ENABLE_DOCS_TRUE@	cp -RP $(BUILD_OUTPUT_DIR)/docs/* $(DESTDIR)$(htmldir)
	for vms in client server ; do \
	  if [ -f $(BUILD_SDK_DIR)/jre/lib/$(INSTALL_ARCH_DIR)/$${vms}/classes.jsa ] ; then \
	    ${mkinstalldirs} $(DESTDIR)${prefix}/jre/lib/$(INSTALL_ARCH_DIR)/$${vms} ; \
	    $(INSTALL_DATA) $(BUILD_SDK_DIR)/jre/lib/$(INSTALL_ARCH_DIR)/$${vms}/classes.jsa \
	      $(DESTDIR)${prefix}/jre/lib/$(INSTALL_ARCH_DIR)/$${vms} ; \
	  fi ; \
	done

uninstall-local:
	for files in $(BUILD_SDK_DIR)/bin/*; do \
	  rm -vf $(DESTDIR)$(bindir)/$$(basename $${files}); \
	done
	for files in $(BUILD_SDK_DIR)/include/*.h; do \
	  rm -vf $(DESTDIR)$(includedir)/$$(basename $${files}); \
	done
	for files in $(BUILD_SDK_DIR)/include/$(BUILD_OS_DIR)/*.h; do \
	  rm -vf $(DESTDIR)$(includedir)/$(BUILD_OS_DIR)/$$(basename $${files}); \
	done
	for files in $(BUILD_SDK_DIR)/lib/*.jar; do \
	  rm -vf $(DESTDIR)${exec_prefix}/lib/$$(basename $${files}); \
	done
	for files in $(BUILD_SDK_DIR)/lib/*.idl; do \
	  rm -vf $(DESTDIR)${exec_prefix}/lib/$$(basename $${files}); \
	done
	rm -vf $(DESTDIR)${exec_prefix}/lib/jexec
	for files in $(BUILD_SDK_DIR)/lib/$(INSTALL_ARCH_DIR)/*.so; do \
	  rm -vf $(DESTDIR)${exec_prefix}/lib/$(INSTALL_ARCH_DIR)/$$(basename $${files}); \
	done
	for files in $(BUILD_SDK_DIR)/lib/$(INSTALL_ARCH_DIR)/jli/*.so; do \
	  rm -vf $(DESTDIR)${exec_prefix}/lib/$(INSTALL_ARCH_DIR)/jli/$$(basename $${files}); \
	done
	for files in $(BUILD_SDK_DIR)/jre/bin/*; do \
	  rm -vf $(DESTDIR)${prefix}/jre/bin/$$(basename $${files}); \
	done
	for files in $(BUILD_SDK_DIR)/jre/lib/*.jar; do \
	  rm -vf $(DESTDIR)${prefix}/jre/lib/$$(basename $${files}); \
	done
	rm -vf $(DESTDIR)${prefix}/jre/lib/jexec
	for files in $(BUILD_SDK_DIR)/jre/lib/$(INSTALL_ARCH_DIR)/*.so; do \
	  rm -vf $(DESTDIR)${prefix}/jre/lib/$(INSTALL_ARCH_DIR)/$$(basename $${files}); \
	done
	for files in $(BUILD_SDK_DIR)/jre/lib/$(INSTALL_ARCH_DIR)/jli/*.so; do \
	  rm -vf $(DESTDIR)${prefix}/jre/lib/$(INSTALL_ARCH_DIR)/jli/$$(basename $${files}); \
	done
	for vms in client server ; do \
	  for files in $(BUILD_SDK_DIR)/jre/lib/$(INSTALL_ARCH_DIR)/$${vms}/*.so; do \
	    rm -vf $(DESTDIR)${prefix}/jre/lib/$(INSTALL_ARCH_DIR)/$${vms}/$$(basename $${files}); \
	  done ; \
	done
	for files in $(BUILD_SDK_DIR)/jre/lib/ext/*.jar; do \
	  rm -vf $(DESTDIR)${prefix}/jre/lib/ext/$$(basename $${files}); \
	done
	for files in $(BUILD_SDK_DIR)/tapset/*.stp; do \
	  rm -vf $(DESTDIR)${prefix}/tapset/$$(basename $${files}); \
	done
	for files in $(BUILD_SDK_DIR)/jre/lib/*.properties; do \
	  rm -vf $(DESTDIR)${prefix}/jre/lib/$$(basename $${files}); \
	done
	rm -vf $(DESTDIR)${prefix}/release
	rm -vf $(DESTDIR)${prefix}/src.zip
	rm -vf $(DESTDIR)${prefix}/jre/lib/classlist
	rm -vf $(DESTDIR)${prefix}/jre/lib/currency.data
	rm -vf $(DESTDIR)${prefix}/jre/lib/jvm.hprof.txt
	rm -vf $(DESTDIR)${prefix}/jre/lib/meta-index
	rm -vf $(DESTDIR)${prefix}/jre/lib/psfont.properties.ja
	rm -vf $(DESTDIR)${prefix}/jre/lib/tzdb.dat
	rm -vf $(DESTDIR)${prefix}/jre/lib/$(INSTALL_ARCH_DIR)/jvm.cfg
	for vms in client server ; do \
	  rm -vf $(DESTDIR)${prefix}/jre/lib/$(INSTALL_ARCH_DIR)/$${vms}/Xusage.txt; \
	done
	for files in $(BUILD_SDK_DIR)/jre/lib/cmm/*.pf; do \
	  rm -vf $(DESTDIR)/${prefix}/jre/lib/cmm/$$(basename $${files}); \
	done
	rm -vf $(DESTDIR)${prefix}/jre/lib/ext/meta-index
	for files in $(BUILD_SDK_DIR)/jre/lib/images/cursors/*.gif; do \
	  rm -vf $(DESTDIR)${prefix}/jre/lib/images/cursors/$$(basename $${files}); \
	done
	rm -vf $(DESTDIR)${prefix}/jre/lib/images/cursors/cursors.properties
	rm -vf $(DESTDIR)${prefix}/jre/lib/management/jmxremote.access
	rm -vf $(DESTDIR)${prefix}/jre/lib/management/management.properties
	for files in $(BUILD_SDK_DIR)/jre/lib/management/*.template; do \
	  rm -vf $(DESTDIR)${prefix}/jre/lib/management/$$(basename $${files}); \
	done
	rm -vf $(DESTDIR)${prefix}/jre/lib/security/cacerts
	rm -vf $(DESTDIR)${prefix}/jre/lib/security/java.policy
	rm -vf $(DESTDIR)${prefix}/jre/lib/security/java.security
	rm -vf $(DESTDIR)${prefix}/jre/lib/security/nss.cfg
	rm -vf $(DESTDIR)${prefix}/jre/lib/security/blacklisted.certs
	for files in $(BUILD_SDK_DIR)/jre/lib/security/*.jar; do \
	  rm -vf $(DESTDIR)${prefix}/jre/lib/security/$$(basename $${files}); \
	done
	for files in $(BUILD_SDK_DIR)/man/man1/*.1; do \
	  rm -vf $(DESTDIR)$(mandir)/man1/$$(basename $${files}); \
	done
	for files in $(BUILD_SDK_DIR)/man/ja_JP.UTF-8/man1/*.1; do \
	  rm -vf $(DESTDIR)$(mandir)/ja_JP.UTF-8/man1/$$(basename $${files}); \
	done
	for items in $(BUILD_SDK_DIR)/demo/*; do \
	  rm -rvf $(DESTDIR)${prefix}/demo/$$(basename $${items}); \
	done
	for items in $(BUILD_SDK_DIR)/sample/*; do \
	  rm -rvf $(DESTDIR)${prefix}/sample/$$(basename $${items}); \
	done
	rm -rf $(DESTDIR)$(docdir)/README
	rm -rf $(DESTDIR)$(docdir)/NEWS
	rm -rf $(DESTDIR)$(docdir)/AUTHORS
	rm -rf $(DESTDIR)$(docdir)/HACKING
	rm -rf $(DESTDIR)$(docdir)/COPYING
	rm -rf $(DESTDIR)$(docdir)/ChangeLog
	rm -rf $(DESTDIR)$(docdir)/ASSEMBLY_EXCEPTION
	rm -rf $(DESTDIR)$(docdir)/LICENSE
	rm -rf $(DESTDIR)$(docdir)/THIRD_PARTY_README
	rm -rf $(DESTDIR)$(docdir)/TRADEMARK
	for sizes in 16 24 32 48 ; do \
	  rm -vf $(DESTDIR)$(datadir)/icons/hicolor/$${sizes}x$${sizes}/apps/java-@JAVA_VER@.png; \
	done
	for files in $(DESKTOP_FILES) ; do \
	  rm -vf $(DESTDIR)$(datadir)/applications/$$(basename $${files}); \
	done
	rm -vf $(DESTDIR)${prefix}/jre/.systemPrefs/.system.lock
	rm -vf $(DESTDIR)${prefix}/jre/.systemPrefs/.systemRootModFile
@ENABLE_DOCS_TRUE@	for items in $(BUILD_OUTPUT_DIR)/docs/*; do \
@ENABLE_DOCS_TRUE@	  rm -rvf $(DESTDIR)$(htmldir)/$$(basename $${items}); \
@ENABLE_DOCS_TRUE@	done
	for vms in client server ; do \
	  rm -vf $(DESTDIR)${prefix}/jre/lib/$(INSTALL_ARCH_DIR)/$${vms}/classes.jsa; \
	  if [ -d $(DESTDIR)${prefix}/jre/lib/$(INSTALL_ARCH_DIR)/$${vms} ] ; then \
	    $(RMDIR) $(DESTDIR)${prefix}/jre/lib/$(INSTALL_ARCH_DIR)/$${vms} ; \
	  fi ; \
	done
	$(RMDIR) $(DESTDIR)${exec_prefix}/lib/$(INSTALL_ARCH_DIR)/jli
	$(RMDIR) $(DESTDIR)$(includedir)/$(BUILD_OS_DIR) $(DESTDIR)${exec_prefix}/lib/$(INSTALL_ARCH_DIR)
	$(RMDIR) $(DESTDIR)$(bindir) $(DESTDIR)$(includedir) $(DESTDIR)${exec_prefix}/lib
	$(RMDIR) $(DESTDIR)${prefix}/jre/lib/$(INSTALL_ARCH_DIR)/jli
	$(RMDIR) $(DESTDIR)${prefix}/jre/lib/$(INSTALL_ARCH_DIR)
	$(RMDIR) $(DESTDIR)${prefix}/jre/lib/{cmm,ext,images/cursors,management,security}
	$(RMDIR) $(DESTDIR)${prefix}/jre/lib/images
	$(RMDIR) $(DESTDIR)${prefix}/jre/bin $(DESTDIR)${prefix}/jre/lib
	$(RMDIR) $(DESTDIR)${prefix}/jre/.systemPrefs
	$(RMDIR) $(DESTDIR)${prefix}/jre
	$(RMDIR) $(DESTDIR)${prefix}/tapset
	$(RMDIR) $(DESTDIR)${prefix}/demo
	$(RMDIR) $(DESTDIR)${prefix}/sample
	$(RMDIR) $(DESTDIR)$(docdir)
	$(RMDIR) $(DESTDIR)$(datadir)/applications
	$(RMDIR) $(DESTDIR)$(sysconfdir)/.java/.systemPrefs
	$(RMDIR) $(DESTDIR)$(mandir)/{man1,ja_JP.UTF-8/man1}
	for sizes in 16 24 32 48 ; do \
	  $(RMDIR) $(DESTDIR)$(datadir)/icons/hicolor/$${sizes}x$${sizes}/apps ; \
	done
# May have already been removed if docdir == htmldir
@ENABLE_DOCS_TRUE@	if [ -d $(DESTDIR)$(htmldir) ] ; then \
@ENABLE_DOCS_TRUE@	  $(RMDIR) $(DESTDIR)$(htmldir) ; \
@ENABLE_DOCS_TRUE@	fi

# Target Aliases
# ===============

add-archive: stamps/add-archive.stamp

add-archive-boot: stamps/add-archive-ecj.stamp

add-archive-debug: stamps/add-archive-debug.stamp

add-cacao: stamps/add-cacao.stamp

add-cacao-debug: stamps/add-cacao-debug.stamp

add-jamvm: stamps/add-jamvm.stamp

add-jamvm-debug: stamps/add-jamvm-debug.stamp

add-zero: stamps/add-zero.stamp

add-zero-debug: stamps/add-zero-debug.stamp

bootstrap-directory-stage1: stamps/bootstrap-directory-stage1.stamp

bootstrap-directory-stage2: stamps/bootstrap-directory-stage2.stamp

bootstrap-directory-symlink-stage1: stamps/bootstrap-directory-symlink-stage1.stamp

bootstrap-directory-symlink-stage2: stamps/bootstrap-directory-symlink-stage2.stamp

cacao: stamps/cacao.stamp

cacao-build: stamps/cacao-build.stamp

cacao-configure: stamps/cacao-configure.stamp

cacao-install: stamps/cacao-install.stamp

check-crypto: stamps/check-crypto.stamp

check-crypto-boot: stamps/check-crypto-boot.stamp

check-crypto-debug: stamps/check-crypto-debug.stamp

check-ecc: stamps/check-ecc.stamp

clone-boot: stamps/clone-boot.stamp

cryptocheck: stamps/cryptocheck.stamp

download: stamps/download.stamp

download-cacao: stamps/download-cacao.stamp

download-corba: stamps/download-corba.stamp

download-hotspot: stamps/download-hotspot.stamp

download-jamvm: stamps/download-jamvm.stamp

download-jaxp: stamps/download-jaxp.stamp

download-jaxws: stamps/download-jaxws.stamp

download-jdk: stamps/download-jdk.stamp

download-langtools: stamps/download-langtools.stamp

download-nashorn: stamps/download-nashorn.stamp

download-openjdk: stamps/download-openjdk.stamp

ecccheck: stamps/ecccheck.stamp

extract: stamps/extract.stamp

extract-cacao: stamps/extract-cacao.stamp

extract-corba: stamps/extract-corba.stamp

extract-hotspot: stamps/extract-hotspot.stamp

extract-jamvm: stamps/extract-jamvm.stamp

extract-jaxp: stamps/extract-jaxp.stamp

extract-jaxws: stamps/extract-jaxws.stamp

extract-jdk: stamps/extract-jdk.stamp

extract-langtools: stamps/extract-langtools.stamp

extract-nashorn: stamps/extract-nashorn.stamp

extract-openjdk: stamps/extract-openjdk.stamp

icedtea-configure: stamps/icedtea-configure.stamp

icedtea: stamps/icedtea.stamp

icedtea-boot-configure: stamps/icedtea-boot-configure.stamp

icedtea-boot: stamps/icedtea-boot.stamp

icedtea-debug-configure: stamps/icedtea-debug-configure.stamp

icedtea-debug: stamps/icedtea-debug.stamp

icedtea-debug-stage2: stamps/icedtea-debug-stage2.stamp

icedtea-stage1: stamps/icedtea-stage1.stamp

icedtea-stage2: stamps/icedtea-stage2.stamp

jamvm: stamps/jamvm.stamp

jamvm-build: stamps/jamvm-build.stamp

jamvm-configure: stamps/jamvm-configure.stamp

jamvm-install: stamps/jamvm-install.stamp

jtreg: stamps/jtreg.stamp

overlay: stamps/overlay.stamp

patch: stamps/patch.stamp

patch-boot: stamps/patch-boot.stamp

patch-fsg: stamps/patch-fsg.stamp

remove-intree-libraries: stamps/remove-intree-libraries.stamp

sanitise-openjdk: stamps/sanitise-openjdk.stamp

versioning: stamps/versioning.stamp

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
